// <auto-generated />
using System;
using EDI.Infrastructure.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace EDI.Infrastructure.Data.Migrations
{
    [DbContext(typeof(ServiceContext))]
    partial class ServiceContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("EDI.ApplicationCore.Entities.Child", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ChildNumber")
                        .HasColumnType("nvarchar(15)")
                        .HasMaxLength(15);

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("varchar(256)")
                        .HasMaxLength(256)
                        .IsUnicode(false);

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("Dob")
                        .HasColumnName("DOB")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("Ediid")
                        .HasColumnName("EDIID")
                        .HasColumnType("nvarchar(15)")
                        .HasMaxLength(15);

                    b.Property<int?>("GenderId")
                        .HasColumnName("GenderID")
                        .HasColumnType("int");

                    b.Property<string>("LocalId")
                        .HasColumnName("LocalID")
                        .HasColumnType("nvarchar(40)")
                        .HasMaxLength(40);

                    b.Property<string>("ModifiedBy")
                        .IsRequired()
                        .HasColumnType("varchar(256)")
                        .HasMaxLength(256)
                        .IsUnicode(false);

                    b.Property<DateTime>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("PostalCodeZip")
                        .HasColumnType("nvarchar(10)")
                        .HasMaxLength(10);

                    b.Property<int?>("TeacherId")
                        .HasColumnName("TeacherID")
                        .HasColumnType("int");

                    b.Property<int?>("YearId")
                        .HasColumnName("YearID")
                        .HasColumnType("int")
                        .HasComment("Year of the EDI implementation");

                    b.HasKey("Id");

                    b.HasIndex("GenderId");

                    b.HasIndex("TeacherId");

                    b.HasIndex("YearId");

                    b.ToTable("Children","EDI");
                });

            modelBuilder.Entity("EDI.ApplicationCore.Entities.Coordinator", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CoordinatorName")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(256)")
                        .HasMaxLength(256);

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("varchar(max)")
                        .IsUnicode(false);

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("ModifiedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(256)")
                        .HasMaxLength(256);

                    b.Property<DateTime>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(14)")
                        .HasMaxLength(14);

                    b.Property<string>("UserId")
                        .HasColumnName("UserID")
                        .HasColumnType("nvarchar(40)")
                        .HasMaxLength(40);

                    b.Property<int?>("YearId")
                        .HasColumnName("YearID")
                        .HasColumnType("int")
                        .HasComment("Year of the EDI implementation");

                    b.HasKey("Id");

                    b.HasIndex("YearId");

                    b.ToTable("Coordinators","EDI");
                });

            modelBuilder.Entity("EDI.ApplicationCore.Entities.Country", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Code")
                        .HasColumnName("Code")
                        .HasColumnType("int");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(256)")
                        .HasMaxLength(256);

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("English")
                        .IsRequired()
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("French")
                        .IsRequired()
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("ISO2CountryCode")
                        .IsRequired()
                        .HasColumnName("ISO2CountryCode")
                        .HasColumnType("nvarchar(2)")
                        .HasMaxLength(2);

                    b.Property<string>("ISO3CountryCode")
                        .IsRequired()
                        .HasColumnName("ISO3CountryCode")
                        .HasColumnType("nvarchar(3)")
                        .HasMaxLength(3);

                    b.Property<string>("ModifiedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(256)")
                        .HasMaxLength(256);

                    b.Property<DateTime>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Countries","LUData");
                });

            modelBuilder.Entity("EDI.ApplicationCore.Entities.DateDimension", b =>
                {
                    b.Property<DateTime>("Date")
                        .HasColumnType("date");

                    b.Property<byte>("DOWInMonth")
                        .HasColumnType("tinyint");

                    b.Property<byte>("Day")
                        .HasColumnType("tinyint");

                    b.Property<short>("DayOfYear")
                        .HasColumnType("smallint");

                    b.Property<string>("DaySuffix")
                        .IsRequired()
                        .HasColumnType("char(2)")
                        .IsFixedLength(true)
                        .HasMaxLength(2)
                        .IsUnicode(false);

                    b.Property<DateTime>("FirstDayOfMonth")
                        .HasColumnType("date");

                    b.Property<DateTime>("FirstDayOfNextMonth")
                        .HasColumnType("date");

                    b.Property<DateTime>("FirstDayOfNextYear")
                        .HasColumnType("date");

                    b.Property<DateTime>("FirstDayOfQuarter")
                        .HasColumnType("date");

                    b.Property<DateTime>("FirstDayOfYear")
                        .HasColumnType("date");

                    b.Property<int>("FiscalYear")
                        .HasColumnType("int");

                    b.Property<int>("FiscalYearMonth")
                        .HasColumnType("int");

                    b.Property<int>("FiscalYearMonthOrder")
                        .HasColumnType("int");

                    b.Property<string>("HolidayText")
                        .HasColumnType("varchar(64)")
                        .HasMaxLength(64)
                        .IsUnicode(false);

                    b.Property<byte>("ISOWeekOfYear")
                        .HasColumnType("tinyint");

                    b.Property<bool>("IsHoliday")
                        .HasColumnType("bit");

                    b.Property<bool>("IsWeekend")
                        .HasColumnType("bit");

                    b.Property<DateTime>("LastDayOfMonth")
                        .HasColumnType("date");

                    b.Property<DateTime>("LastDayOfQuarter")
                        .HasColumnType("date");

                    b.Property<DateTime>("LastDayOfYear")
                        .HasColumnType("date");

                    b.Property<byte>("Month")
                        .HasColumnType("tinyint");

                    b.Property<string>("MonthName")
                        .IsRequired()
                        .HasColumnType("varchar(10)")
                        .HasMaxLength(10)
                        .IsUnicode(false);

                    b.Property<byte>("Quarter")
                        .HasColumnType("tinyint");

                    b.Property<string>("QuarterName")
                        .IsRequired()
                        .HasColumnType("varchar(6)")
                        .HasMaxLength(6)
                        .IsUnicode(false);

                    b.Property<string>("WeekDayName")
                        .IsRequired()
                        .HasColumnType("varchar(10)")
                        .HasMaxLength(10)
                        .IsUnicode(false);

                    b.Property<byte>("WeekOfMonth")
                        .HasColumnType("tinyint");

                    b.Property<byte>("WeekOfYear")
                        .HasColumnType("tinyint");

                    b.Property<byte>("Weekday")
                        .HasColumnType("tinyint");

                    b.Property<int>("Year")
                        .HasColumnType("int");

                    b.Property<int>("YearMonth")
                        .HasColumnType("int");

                    b.HasKey("Date");

                    b.ToTable("DateDimension");
                });

            modelBuilder.Entity("EDI.ApplicationCore.Entities.Faq", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool?>("Alberta")
                        .HasColumnType("bit");

                    b.Property<string>("Answer")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("BritishColumbia")
                        .HasColumnType("bit");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("varchar(256)")
                        .HasMaxLength(256)
                        .IsUnicode(false);

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool?>("IsAdministratorFaq")
                        .HasColumnName("IsAdministratorFAQ")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsCoordinatorFaq")
                        .HasColumnName("IsCoordinatorFAQ")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsTeacherFaq")
                        .HasColumnName("IsTeacherFAQ")
                        .HasColumnType("bit");

                    b.Property<bool?>("Manitoba")
                        .HasColumnType("bit");

                    b.Property<string>("ModifiedBy")
                        .IsRequired()
                        .HasColumnType("varchar(256)")
                        .HasMaxLength(256)
                        .IsUnicode(false);

                    b.Property<DateTime>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool?>("NewBrunswick")
                        .HasColumnType("bit");

                    b.Property<bool?>("NewfoundlandandLabrador")
                        .HasColumnType("bit");

                    b.Property<bool?>("NorthwestTerritories")
                        .HasColumnType("bit");

                    b.Property<bool?>("NovaScotia")
                        .HasColumnType("bit");

                    b.Property<bool?>("Nunavut")
                        .HasColumnType("bit");

                    b.Property<bool?>("Ontario")
                        .HasColumnType("bit");

                    b.Property<bool?>("PrinceEdwardIsland")
                        .HasColumnType("bit");

                    b.Property<bool?>("Quebec")
                        .HasColumnType("bit");

                    b.Property<string>("Question")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("Saskatchewan")
                        .HasColumnType("bit");

                    b.Property<short>("Sequence")
                        .HasColumnType("smallint");

                    b.Property<int>("YearId")
                        .HasColumnName("YearID")
                        .HasColumnType("int");

                    b.Property<bool?>("YukonTerritory")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.HasIndex("YearId");

                    b.ToTable("FAQ","EDI");
                });

            modelBuilder.Entity("EDI.ApplicationCore.Entities.FileImport", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("ChildDob")
                        .HasColumnName("ChildDOB")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("ChildEdiid")
                        .HasColumnName("ChildEDIID")
                        .HasColumnType("nvarchar(15)")
                        .HasMaxLength(15);

                    b.Property<string>("ChildPostalCodeZip")
                        .HasColumnType("nvarchar(10)")
                        .HasMaxLength(10);

                    b.Property<string>("CoordinatorEmail")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("CoordinatorName")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("varchar(256)")
                        .HasMaxLength(256)
                        .IsUnicode(false);

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("FileImportStatusId")
                        .HasColumnName("FileImportStatusID")
                        .HasColumnType("int");

                    b.Property<string>("FileName")
                        .HasColumnType("nvarchar(256)")
                        .HasMaxLength(256);

                    b.Property<int?>("GenderId")
                        .HasColumnName("GenderID")
                        .HasColumnType("int");

                    b.Property<string>("LocalId")
                        .HasColumnName("LocalID")
                        .HasColumnType("nvarchar(40)")
                        .HasMaxLength(40);

                    b.Property<string>("ModifiedBy")
                        .IsRequired()
                        .HasColumnType("varchar(256)")
                        .HasMaxLength(256)
                        .IsUnicode(false);

                    b.Property<DateTime>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("SchoolName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SiteName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TeacherEmail")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("TeacherName")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.HasKey("Id");

                    b.HasIndex("FileImportStatusId");

                    b.HasIndex("GenderId");

                    b.ToTable("FileImports","Staging");
                });

            modelBuilder.Entity("EDI.ApplicationCore.Entities.FileImportStatus", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasColumnType("nvarchar(3)")
                        .HasMaxLength(3);

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("varchar(256)")
                        .HasMaxLength(256)
                        .IsUnicode(false);

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("English")
                        .HasColumnType("nvarchar(150)")
                        .HasMaxLength(150);

                    b.Property<string>("French")
                        .HasColumnType("nvarchar(150)")
                        .HasMaxLength(150);

                    b.Property<string>("ModifiedBy")
                        .IsRequired()
                        .HasColumnType("varchar(256)")
                        .HasMaxLength(256)
                        .IsUnicode(false);

                    b.Property<DateTime>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("Sequence")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("FileImportStatus","LUData");
                });

            modelBuilder.Entity("EDI.ApplicationCore.Entities.FormConfigurations", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("varchar(256)")
                        .HasMaxLength(256)
                        .IsUnicode(false);

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("FieldName")
                        .HasColumnType("varchar(max)")
                        .IsUnicode(false);

                    b.Property<string>("FormName")
                        .HasColumnType("varchar(max)")
                        .IsUnicode(false);

                    b.Property<bool>("IsEnabled")
                        .HasColumnType("bit");

                    b.Property<bool>("IsRequired")
                        .HasColumnType("bit");

                    b.Property<bool>("IsVisible")
                        .HasColumnType("bit");

                    b.Property<string>("ModifiedBy")
                        .IsRequired()
                        .HasColumnType("varchar(256)")
                        .HasMaxLength(256)
                        .IsUnicode(false);

                    b.Property<DateTime>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("Order")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("FormConfigurations");
                });

            modelBuilder.Entity("EDI.ApplicationCore.Entities.Gender", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasColumnType("nvarchar(3)")
                        .HasMaxLength(3);

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("varchar(256)")
                        .HasMaxLength(256)
                        .IsUnicode(false);

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("English")
                        .HasColumnType("nvarchar(150)")
                        .HasMaxLength(150);

                    b.Property<string>("French")
                        .HasColumnType("nvarchar(150)")
                        .HasMaxLength(150);

                    b.Property<string>("ModifiedBy")
                        .IsRequired()
                        .HasColumnType("varchar(256)")
                        .HasMaxLength(256)
                        .IsUnicode(false);

                    b.Property<DateTime>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("Sequence")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Genders","LUData");
                });

            modelBuilder.Entity("EDI.ApplicationCore.Entities.InputType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("varchar(256)")
                        .HasMaxLength(256)
                        .IsUnicode(false);

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("English")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("French")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("ModifiedBy")
                        .IsRequired()
                        .HasColumnType("varchar(256)")
                        .HasMaxLength(256)
                        .IsUnicode(false);

                    b.Property<DateTime>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("YearId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("YearId");

                    b.ToTable("InputTypes","LUData");
                });

            modelBuilder.Entity("EDI.ApplicationCore.Entities.Language", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasColumnType("nvarchar(3)")
                        .HasMaxLength(3);

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("varchar(256)")
                        .HasMaxLength(256)
                        .IsUnicode(false);

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("English")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("French")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("ModifiedBy")
                        .IsRequired()
                        .HasColumnType("varchar(256)")
                        .HasMaxLength(256)
                        .IsUnicode(false);

                    b.Property<DateTime>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("Sequence")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Languages","LUData");
                });

            modelBuilder.Entity("EDI.ApplicationCore.Entities.Link", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool?>("Alberta")
                        .HasColumnType("bit");

                    b.Property<bool?>("BritishColumbia")
                        .HasColumnType("bit");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("varchar(256)")
                        .HasMaxLength(256)
                        .IsUnicode(false);

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("IsAdminLink")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsCoordinatorLink")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsTeacherLink")
                        .HasColumnType("bit");

                    b.Property<bool?>("Manitoba")
                        .HasColumnType("bit");

                    b.Property<string>("ModifiedBy")
                        .IsRequired()
                        .HasColumnType("varchar(256)")
                        .HasMaxLength(256)
                        .IsUnicode(false);

                    b.Property<DateTime>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(255)")
                        .HasMaxLength(255);

                    b.Property<bool?>("NewBrunswick")
                        .HasColumnType("bit");

                    b.Property<bool?>("NewfoundlandandLabrador")
                        .HasColumnType("bit");

                    b.Property<bool?>("NorthwestTerritories")
                        .HasColumnType("bit");

                    b.Property<bool?>("NovaScotia")
                        .HasColumnType("bit");

                    b.Property<bool?>("Nunavut")
                        .HasColumnType("bit");

                    b.Property<bool?>("Ontario")
                        .HasColumnType("bit");

                    b.Property<bool?>("PrinceEdwardIsland")
                        .HasColumnType("bit");

                    b.Property<bool?>("Quebec")
                        .HasColumnType("bit");

                    b.Property<bool?>("Saskatchewan")
                        .HasColumnType("bit");

                    b.Property<short>("Sequence")
                        .HasColumnType("smallint");

                    b.Property<string>("Url")
                        .HasColumnName("URL")
                        .HasColumnType("nvarchar(255)")
                        .HasMaxLength(255);

                    b.Property<int>("YearId")
                        .HasColumnName("YearID")
                        .HasColumnType("int");

                    b.Property<bool?>("YukonTerritory")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.HasIndex("YearId");

                    b.ToTable("Links","EDI");
                });

            modelBuilder.Entity("EDI.ApplicationCore.Entities.LookupSet", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("varchar(256)")
                        .HasMaxLength(256)
                        .IsUnicode(false);

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("LookupName")
                        .IsRequired()
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("ModifiedBy")
                        .IsRequired()
                        .HasColumnType("varchar(256)")
                        .HasMaxLength(256)
                        .IsUnicode(false);

                    b.Property<DateTime>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("YearId")
                        .HasColumnName("YearID")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("YearId");

                    b.ToTable("LookupSets","LUData");
                });

            modelBuilder.Entity("EDI.ApplicationCore.Entities.LookupSetOption", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("varchar(256)")
                        .HasMaxLength(256)
                        .IsUnicode(false);

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("English")
                        .IsRequired()
                        .HasColumnType("nvarchar(150)")
                        .HasMaxLength(150);

                    b.Property<string>("French")
                        .HasColumnType("nvarchar(150)")
                        .HasMaxLength(150);

                    b.Property<int>("LookupSetId")
                        .HasColumnType("int");

                    b.Property<string>("ModifiedBy")
                        .IsRequired()
                        .HasColumnType("varchar(256)")
                        .HasMaxLength(256)
                        .IsUnicode(false);

                    b.Property<DateTime>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<short>("Sequence")
                        .HasColumnType("smallint");

                    b.Property<short>("Value")
                        .HasColumnType("smallint");

                    b.HasKey("Id");

                    b.HasIndex("LookupSetId");

                    b.ToTable("LookupSetOptions","LUData");
                });

            modelBuilder.Entity("EDI.ApplicationCore.Entities.MenuConfigurations", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("varchar(256)")
                        .HasMaxLength(256)
                        .IsUnicode(false);

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("DisplayOrder")
                        .HasColumnType("int");

                    b.Property<string>("English")
                        .HasColumnType("varchar(max)")
                        .IsUnicode(false);

                    b.Property<bool>("ForAdmin")
                        .HasColumnType("bit");

                    b.Property<bool>("ForCoordinator")
                        .HasColumnType("bit");

                    b.Property<bool>("ForTeacher")
                        .HasColumnType("bit");

                    b.Property<string>("French")
                        .HasColumnType("varchar(max)")
                        .IsUnicode(false);

                    b.Property<bool>("HasChild")
                        .HasColumnType("bit");

                    b.Property<string>("IconCss")
                        .HasColumnType("varchar(max)")
                        .IsUnicode(false);

                    b.Property<bool>("IsVisible")
                        .HasColumnType("bit");

                    b.Property<string>("ModifiedBy")
                        .IsRequired()
                        .HasColumnType("varchar(256)")
                        .HasMaxLength(256)
                        .IsUnicode(false);

                    b.Property<DateTime>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("NodeId")
                        .HasColumnType("varchar(max)")
                        .IsUnicode(false);

                    b.Property<string>("PID")
                        .HasColumnType("varchar(max)")
                        .IsUnicode(false);

                    b.Property<string>("URL")
                        .HasColumnType("varchar(max)")
                        .IsUnicode(false);

                    b.HasKey("Id");

                    b.ToTable("MenuConfigurations");
                });

            modelBuilder.Entity("EDI.ApplicationCore.Entities.NewsFeed", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool?>("Alberta")
                        .HasColumnType("bit");

                    b.Property<string>("Author")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("BritishColumbia")
                        .HasColumnType("bit");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(256)")
                        .HasMaxLength(256);

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool?>("Manitoba")
                        .HasColumnType("bit");

                    b.Property<string>("ModifiedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(256)")
                        .HasMaxLength(256);

                    b.Property<DateTime>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool?>("NewBrunswick")
                        .HasColumnType("bit");

                    b.Property<bool?>("NewfoundlandandLabrador")
                        .HasColumnType("bit");

                    b.Property<bool?>("NorthwestTerritories")
                        .HasColumnType("bit");

                    b.Property<bool?>("NovaScotia")
                        .HasColumnType("bit");

                    b.Property<bool?>("Nunavut")
                        .HasColumnType("bit");

                    b.Property<bool?>("Ontario")
                        .HasColumnType("bit");

                    b.Property<bool?>("PrinceEdwardIsland")
                        .HasColumnType("bit");

                    b.Property<bool?>("Quebec")
                        .HasColumnType("bit");

                    b.Property<bool?>("Saskatchewan")
                        .HasColumnType("bit");

                    b.Property<string>("Summary")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Text")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Title")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("ValidFrom")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("ValidTo")
                        .HasColumnType("datetime2");

                    b.Property<int>("YearId")
                        .HasColumnType("int");

                    b.Property<bool?>("YukonTerritory")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.HasIndex("YearId");

                    b.ToTable("NewsFeed","EDI");
                });

            modelBuilder.Entity("EDI.ApplicationCore.Entities.Orientation", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("varchar(256)")
                        .HasMaxLength(256)
                        .IsUnicode(false);

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("English")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("French")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("ModifiedBy")
                        .IsRequired()
                        .HasColumnType("varchar(256)")
                        .HasMaxLength(256)
                        .IsUnicode(false);

                    b.Property<DateTime>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("YearId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("YearId");

                    b.ToTable("Orientations","LUData");
                });

            modelBuilder.Entity("EDI.ApplicationCore.Entities.Province", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<int>("CountryID")
                        .HasColumnName("CountryID")
                        .HasColumnType("int");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(64)")
                        .HasMaxLength(64);

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<byte?>("EDICode")
                        .HasColumnType("tinyint");

                    b.Property<string>("English")
                        .IsRequired()
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("French")
                        .IsRequired()
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("ModifiedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(64)")
                        .HasMaxLength(64);

                    b.Property<DateTime>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("ProvinceTypeId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CountryID");

                    b.HasIndex("ProvinceTypeId");

                    b.ToTable("Provinces","LUData");
                });

            modelBuilder.Entity("EDI.ApplicationCore.Entities.ProvinceType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(64)")
                        .HasMaxLength(64);

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("ModifiedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(64)")
                        .HasMaxLength(64);

                    b.Property<DateTime>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.HasKey("Id");

                    b.ToTable("ProvinceType","LUData");
                });

            modelBuilder.Entity("EDI.ApplicationCore.Entities.Questionnaire", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("varchar(256)")
                        .HasMaxLength(256)
                        .IsUnicode(false);

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("DescriptionEnglish")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DescriptionFrench")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("English")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("French")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsChildQuestionnaire")
                        .HasColumnType("bit");

                    b.Property<bool>("IsTeacherQuestionnaire")
                        .HasColumnType("bit");

                    b.Property<string>("ModifiedBy")
                        .IsRequired()
                        .HasColumnType("varchar(256)")
                        .HasMaxLength(256)
                        .IsUnicode(false);

                    b.Property<DateTime>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("QuestionnaireName")
                        .IsRequired()
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<int>("Sequence")
                        .HasColumnType("int");

                    b.Property<bool?>("ShowProgressBar")
                        .HasColumnType("bit")
                        .HasComment("Answered x of y Questions");

                    b.Property<bool?>("ShowQuestionNumbers")
                        .HasColumnType("bit");

                    b.Property<int>("YearId")
                        .HasColumnName("YearID")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("YearId");

                    b.ToTable("Questionnaires","EDI");
                });

            modelBuilder.Entity("EDI.ApplicationCore.Entities.QuestionnairesConfiguration", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool?>("Alberta")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValueSql("((0))");

                    b.Property<bool?>("BritishColumbia")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValueSql("((0))");

                    b.Property<byte?>("ColumnSpan")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("tinyint")
                        .HasDefaultValueSql("((1))");

                    b.Property<byte>("Columns")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("tinyint")
                        .HasDefaultValueSql("((10))");

                    b.Property<string>("Condition")
                        .HasColumnType("nvarchar(255)")
                        .HasMaxLength(255);

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnType("varchar(256)")
                        .HasDefaultValueSql("('Renner')")
                        .HasMaxLength(256)
                        .IsUnicode(false);

                    b.Property<DateTime>("CreatedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("English")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EntityField")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("EntityName")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("French")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("GroupName")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<bool>("HasHelp")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValueSql("((1))");

                    b.Property<bool>("HasLookupEntity")
                        .HasColumnType("bit");

                    b.Property<bool?>("HasNotification")
                        .HasColumnType("bit");

                    b.Property<string>("HelpText")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("HelpTextFrench")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("InputTypeId")
                        .HasColumnName("InputTypeId")
                        .HasColumnType("int");

                    b.Property<bool?>("IsConditional")
                        .HasColumnType("bit");

                    b.Property<bool>("IsHeader")
                        .HasColumnType("bit");

                    b.Property<bool>("IsReadOnly")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValueSql("((0))");

                    b.Property<bool>("IsRequired")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValueSql("((1))");

                    b.Property<string>("LookupEntity")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<int?>("LookupEntityId")
                        .HasColumnName("LookupEntityID")
                        .HasColumnType("int");

                    b.Property<bool?>("Manitoba")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValueSql("((0))");

                    b.Property<string>("Mask")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<byte?>("MaxLength")
                        .HasColumnType("tinyint");

                    b.Property<string>("ModifiedBy")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnType("varchar(256)")
                        .HasDefaultValueSql("('Renner')")
                        .HasMaxLength(256)
                        .IsUnicode(false);

                    b.Property<DateTime>("ModifiedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<bool?>("NewBrunswick")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValueSql("((0))");

                    b.Property<bool?>("NewfoundlandandLabrador")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValueSql("((0))");

                    b.Property<bool?>("NorthwestTerritories")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("NorthwestTerritories")
                        .HasColumnType("bit")
                        .HasDefaultValueSql("((0))");

                    b.Property<string>("Notification")
                        .HasColumnType("nvarchar(500)")
                        .HasMaxLength(500);

                    b.Property<string>("NotificationCondition")
                        .HasColumnType("nvarchar(200)")
                        .HasMaxLength(200);

                    b.Property<string>("NotificationFrench")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("NovaScotia")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValueSql("((0))");

                    b.Property<bool?>("Nunavut")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValueSql("((0))");

                    b.Property<bool?>("Ontario")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValueSql("((0))");

                    b.Property<int?>("OrientationId")
                        .HasColumnName("OrientationID")
                        .HasColumnType("int");

                    b.Property<bool?>("PrinceEdwardIsland")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("PrinceEdwardIsland")
                        .HasColumnType("bit")
                        .HasDefaultValueSql("((0))");

                    b.Property<bool?>("Quebec")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValueSql("((0))");

                    b.Property<string>("QuestionNumber")
                        .HasColumnType("nvarchar(5)")
                        .HasMaxLength(5);

                    b.Property<int>("QuestionnaireId")
                        .HasColumnName("QuestionnaireID")
                        .HasColumnType("int");

                    b.Property<bool?>("Saskatchewan")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValueSql("((0))");

                    b.Property<int>("Sequence")
                        .HasColumnType("int");

                    b.Property<bool>("ShowGroupName")
                        .HasColumnType("bit");

                    b.Property<string>("VariableName")
                        .HasColumnType("nvarchar(50)")
                        .HasComment("Variable Name for data dictionary")
                        .HasMaxLength(50);

                    b.Property<int?>("YearId")
                        .HasColumnType("int");

                    b.Property<bool?>("YukonTerritory")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValueSql("((0))");

                    b.HasKey("Id");

                    b.HasIndex("InputTypeId");

                    b.HasIndex("LookupEntityId");

                    b.HasIndex("OrientationId");

                    b.HasIndex("QuestionnaireId");

                    b.HasIndex("YearId");

                    b.ToTable("Questionnaires.Configuration","EDI");
                });

            modelBuilder.Entity("EDI.ApplicationCore.Entities.QuestionnairesDataDemographic", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<byte?>("AttendedJk")
                        .HasColumnName("AttendedJK")
                        .HasColumnType("tinyint");

                    b.Property<int>("ChildId")
                        .HasColumnType("int");

                    b.Property<bool?>("Chipewyan")
                        .HasColumnType("bit");

                    b.Property<byte?>("ClassAssignment")
                        .HasColumnType("tinyint");

                    b.Property<byte?>("ClassType")
                        .HasColumnType("tinyint");

                    b.Property<byte?>("Communicates")
                        .HasColumnType("tinyint");

                    b.Property<byte?>("ConsideredEsl")
                        .HasColumnName("ConsideredESL")
                        .HasColumnType("tinyint");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnType("varchar(256)")
                        .HasDefaultValueSql("('admin')")
                        .HasMaxLength(256)
                        .IsUnicode(false);

                    b.Property<DateTime>("CreatedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<bool?>("Cree")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("Dob")
                        .HasColumnName("DOB")
                        .HasColumnType("smalldatetime");

                    b.Property<bool?>("English")
                        .HasColumnType("bit");

                    b.Property<byte?>("EthnicStatus")
                        .HasColumnType("tinyint");

                    b.Property<bool?>("French")
                        .HasColumnType("bit");

                    b.Property<byte?>("FrenchImmersion")
                        .HasColumnType("tinyint");

                    b.Property<byte?>("Gender")
                        .HasColumnType("tinyint");

                    b.Property<bool?>("Gwichin")
                        .HasColumnType("bit");

                    b.Property<bool?>("Inuinnaqtun")
                        .HasColumnType("bit");

                    b.Property<bool?>("Inuktitut")
                        .HasColumnType("bit");

                    b.Property<bool?>("Inuvialuktun")
                        .HasColumnType("bit");

                    b.Property<byte?>("Jkteacher")
                        .HasColumnName("JKTeacher")
                        .HasColumnType("tinyint");

                    b.Property<byte?>("LandAgreement")
                        .HasColumnType("tinyint");

                    b.Property<string>("LanguageCompleted")
                        .HasColumnType("nvarchar(10)")
                        .HasMaxLength(10);

                    b.Property<string>("ModifiedBy")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnType("varchar(256)")
                        .HasDefaultValueSql("('admin')")
                        .HasMaxLength(256)
                        .IsUnicode(false);

                    b.Property<DateTime>("ModifiedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<bool?>("NorthSlavey")
                        .HasColumnType("bit");

                    b.Property<byte?>("OtherImmersion")
                        .HasColumnType("tinyint");

                    b.Property<byte?>("OtherLanguage")
                        .HasColumnType("tinyint");

                    b.Property<string>("PostalCode")
                        .HasColumnType("nvarchar(10)")
                        .HasMaxLength(10);

                    b.Property<bool?>("SouthSlavey")
                        .HasColumnType("bit");

                    b.Property<byte?>("SpecialNeeds")
                        .HasColumnType("tinyint");

                    b.Property<byte?>("StudentStatus")
                        .HasColumnType("tinyint");

                    b.Property<bool?>("Tlicho")
                        .HasColumnType("bit");

                    b.Property<int?>("YearId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ChildId");

                    b.HasIndex("YearId");

                    b.ToTable("Questionnaires.Data.Demographics","EDI");
                });

            modelBuilder.Entity("EDI.ApplicationCore.Entities.QuestionnairesDataSectionA", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("ChildId")
                        .HasColumnType("int");

                    b.Property<byte>("ClimbingStairs")
                        .HasColumnType("tinyint");

                    b.Property<byte>("Coordinated")
                        .HasColumnType("tinyint");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnType("varchar(256)")
                        .HasDefaultValueSql("('admin')")
                        .HasMaxLength(256)
                        .IsUnicode(false);

                    b.Property<DateTime>("CreatedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<decimal>("Days")
                        .HasColumnType("decimal(18,2)");

                    b.Property<byte>("Energy")
                        .HasColumnType("tinyint");

                    b.Property<byte>("HandPreference")
                        .HasColumnType("tinyint");

                    b.Property<byte>("Holding")
                        .HasColumnType("tinyint");

                    b.Property<byte>("Hungry")
                        .HasColumnType("tinyint");

                    b.Property<string>("LanguageCompleted")
                        .HasColumnType("nvarchar(10)")
                        .HasMaxLength(10);

                    b.Property<byte>("Late")
                        .HasColumnType("tinyint");

                    b.Property<byte>("Manipulating")
                        .HasColumnType("tinyint");

                    b.Property<string>("ModifiedBy")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnType("varchar(256)")
                        .HasDefaultValueSql("('admin')")
                        .HasMaxLength(256)
                        .IsUnicode(false);

                    b.Property<DateTime>("ModifiedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<byte>("PhysicalDevelopment")
                        .HasColumnType("tinyint");

                    b.Property<byte>("Tired")
                        .HasColumnType("tinyint");

                    b.Property<byte>("UnderDressed")
                        .HasColumnType("tinyint");

                    b.Property<byte>("WashroomHabits")
                        .HasColumnType("tinyint");

                    b.Property<int?>("YearId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ChildId");

                    b.HasIndex("YearId");

                    b.ToTable("Questionnaires.Data.SectionA","EDI");
                });

            modelBuilder.Entity("EDI.ApplicationCore.Entities.QuestionnairesDataSectionB", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<byte>("Articulates")
                        .HasColumnType("tinyint");

                    b.Property<byte>("Bigger")
                        .HasColumnType("tinyint");

                    b.Property<byte>("Books")
                        .HasColumnType("tinyint");

                    b.Property<int>("ChildId")
                        .HasColumnType("int");

                    b.Property<byte>("Communicates")
                        .HasColumnType("tinyint");

                    b.Property<byte>("ComplexWords")
                        .HasColumnType("tinyint");

                    b.Property<byte>("Count20")
                        .HasColumnType("tinyint");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnType("varchar(256)")
                        .HasDefaultValueSql("('admin')")
                        .HasMaxLength(256)
                        .IsUnicode(false);

                    b.Property<DateTime>("CreatedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<byte>("Effective")
                        .HasColumnType("tinyint");

                    b.Property<byte>("GroupReading")
                        .HasColumnType("tinyint");

                    b.Property<byte>("Handles")
                        .HasColumnType("tinyint");

                    b.Property<byte>("Imagines")
                        .HasColumnType("tinyint");

                    b.Property<string>("LanguageCompleted")
                        .HasColumnType("nvarchar(max)");

                    b.Property<byte>("Letters10")
                        .HasColumnType("tinyint");

                    b.Property<byte>("Listens")
                        .HasColumnType("tinyint");

                    b.Property<byte>("Mathematics")
                        .HasColumnType("tinyint");

                    b.Property<string>("ModifiedBy")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnType("varchar(256)")
                        .HasDefaultValueSql("('admin')")
                        .HasMaxLength(256)
                        .IsUnicode(false);

                    b.Property<DateTime>("ModifiedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<byte>("NumberGames")
                        .HasColumnType("tinyint");

                    b.Property<byte>("OneToOne")
                        .HasColumnType("tinyint");

                    b.Property<string>("OtherSkills")
                        .HasColumnType("nvarchar(max)");

                    b.Property<byte>("Reading")
                        .HasColumnType("tinyint");

                    b.Property<byte>("Recognize10")
                        .HasColumnType("tinyint");

                    b.Property<byte>("Remembers")
                        .HasColumnType("tinyint");

                    b.Property<byte>("Rhyming")
                        .HasColumnType("tinyint");

                    b.Property<byte>("Shapes")
                        .HasColumnType("tinyint");

                    b.Property<byte>("SimpleSentences")
                        .HasColumnType("tinyint");

                    b.Property<byte>("SimpleWords")
                        .HasColumnType("tinyint");

                    b.Property<byte>("Sorting")
                        .HasColumnType("tinyint");

                    b.Property<byte>("Sounds")
                        .HasColumnType("tinyint");

                    b.Property<byte>("SpecialArtSkills")
                        .HasColumnType("tinyint");

                    b.Property<byte>("SpecialAthSkills")
                        .HasColumnType("tinyint");

                    b.Property<byte>("SpecialLitSkills")
                        .HasColumnType("tinyint");

                    b.Property<byte>("SpecialMusSkills")
                        .HasColumnType("tinyint");

                    b.Property<byte>("SpecialNumSkills")
                        .HasColumnType("tinyint");

                    b.Property<byte>("SpecialOthSkills")
                        .HasColumnType("tinyint");

                    b.Property<byte>("SpecialPblskills")
                        .HasColumnType("tinyint");

                    b.Property<byte>("Tells")
                        .HasColumnType("tinyint");

                    b.Property<byte>("TimeConcepts")
                        .HasColumnType("tinyint");

                    b.Property<byte>("Understands")
                        .HasColumnType("tinyint");

                    b.Property<byte>("Voluntarily")
                        .HasColumnType("tinyint");

                    b.Property<byte>("WriteSimpleSentences")
                        .HasColumnType("tinyint");

                    b.Property<byte>("WriteSimpleWords")
                        .HasColumnType("tinyint");

                    b.Property<byte>("WritesName")
                        .HasColumnType("tinyint");

                    b.Property<byte>("Writing")
                        .HasColumnType("tinyint");

                    b.Property<byte>("WritingDirections")
                        .HasColumnType("tinyint");

                    b.Property<int?>("YearId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ChildId");

                    b.HasIndex("YearId");

                    b.ToTable("Questionnaires.Data.SectionB","EDI");
                });

            modelBuilder.Entity("EDI.ApplicationCore.Entities.QuestionnairesDataSectionC", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<byte>("AnswersQuestions")
                        .HasColumnType("tinyint");

                    b.Property<byte>("AssistOthers")
                        .HasColumnType("tinyint");

                    b.Property<byte>("Bullies")
                        .HasColumnType("tinyint");

                    b.Property<int>("ChildId")
                        .HasColumnType("int");

                    b.Property<byte>("Comforting")
                        .HasColumnType("tinyint");

                    b.Property<byte>("Cooperative")
                        .HasColumnType("tinyint");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnType("varchar(256)")
                        .HasDefaultValueSql("('admin')")
                        .HasMaxLength(256)
                        .IsUnicode(false);

                    b.Property<DateTime>("CreatedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<byte>("Cries")
                        .HasColumnType("tinyint");

                    b.Property<byte>("Curious")
                        .HasColumnType("tinyint");

                    b.Property<byte>("Directions")
                        .HasColumnType("tinyint");

                    b.Property<byte>("Disobedient")
                        .HasColumnType("tinyint");

                    b.Property<byte>("Distactable")
                        .HasColumnType("tinyint");

                    b.Property<byte>("EagerNewGame")
                        .HasColumnType("tinyint");

                    b.Property<byte>("EagerNewToy")
                        .HasColumnType("tinyint");

                    b.Property<byte>("EagerRead")
                        .HasColumnType("tinyint");

                    b.Property<byte>("Fearful")
                        .HasColumnType("tinyint");

                    b.Property<byte>("Fidgets")
                        .HasColumnType("tinyint");

                    b.Property<byte>("Fights")
                        .HasColumnType("tinyint");

                    b.Property<byte>("FollowInstruction1Step")
                        .HasColumnType("tinyint");

                    b.Property<byte>("HelpHurt")
                        .HasColumnType("tinyint");

                    b.Property<byte>("HelpPickUpObjects")
                        .HasColumnType("tinyint");

                    b.Property<byte>("HelpSick")
                        .HasColumnType("tinyint");

                    b.Property<byte>("Impulsive")
                        .HasColumnType("tinyint");

                    b.Property<byte>("Inattentive")
                        .HasColumnType("tinyint");

                    b.Property<byte>("IncludesOthers")
                        .HasColumnType("tinyint");

                    b.Property<byte>("Independent")
                        .HasColumnType("tinyint");

                    b.Property<byte>("KicksHits")
                        .HasColumnType("tinyint");

                    b.Property<string>("LanguageCompleted")
                        .HasColumnType("nvarchar(10)")
                        .HasMaxLength(10);

                    b.Property<byte>("LaughsAtOthers")
                        .HasColumnType("tinyint");

                    b.Property<byte>("Listens")
                        .HasColumnType("tinyint");

                    b.Property<byte>("Mediate")
                        .HasColumnType("tinyint");

                    b.Property<byte>("MessCleanup")
                        .HasColumnType("tinyint");

                    b.Property<string>("ModifiedBy")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnType("varchar(256)")
                        .HasDefaultValueSql("('admin')")
                        .HasMaxLength(256)
                        .IsUnicode(false);

                    b.Property<DateTime>("ModifiedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<byte>("Neat")
                        .HasColumnType("tinyint");

                    b.Property<byte>("Nervous")
                        .HasColumnType("tinyint");

                    b.Property<byte>("NoDecisions")
                        .HasColumnType("tinyint");

                    b.Property<byte>("Peers")
                        .HasColumnType("tinyint");

                    b.Property<byte>("Play")
                        .HasColumnType("tinyint");

                    b.Property<byte>("RespectsAdults")
                        .HasColumnType("tinyint");

                    b.Property<byte>("RespectsChildren")
                        .HasColumnType("tinyint");

                    b.Property<byte>("RespectsProperty")
                        .HasColumnType("tinyint");

                    b.Property<byte>("Responsible")
                        .HasColumnType("tinyint");

                    b.Property<byte>("Restless")
                        .HasColumnType("tinyint");

                    b.Property<byte>("RoutineChanges")
                        .HasColumnType("tinyint");

                    b.Property<byte>("Routines")
                        .HasColumnType("tinyint");

                    b.Property<byte>("Rules")
                        .HasColumnType("tinyint");

                    b.Property<byte>("SelfConfidence")
                        .HasColumnType("tinyint");

                    b.Property<byte>("SelfControl")
                        .HasColumnType("tinyint");

                    b.Property<byte>("Separation")
                        .HasColumnType("tinyint");

                    b.Property<byte>("Settle")
                        .HasColumnType("tinyint");

                    b.Property<byte>("Shy")
                        .HasColumnType("tinyint");

                    b.Property<byte>("Social")
                        .HasColumnType("tinyint");

                    b.Property<byte>("SolvesProblem")
                        .HasColumnType("tinyint");

                    b.Property<byte>("SucksThumb")
                        .HasColumnType("tinyint");

                    b.Property<byte>("Takes")
                        .HasColumnType("tinyint");

                    b.Property<byte>("TakesCard")
                        .HasColumnType("tinyint");

                    b.Property<byte>("TakingTurns")
                        .HasColumnType("tinyint");

                    b.Property<byte>("Temper")
                        .HasColumnType("tinyint");

                    b.Property<byte>("Tolerance")
                        .HasColumnType("tinyint");

                    b.Property<byte>("Unhappy")
                        .HasColumnType("tinyint");

                    b.Property<byte>("WorkOnTime")
                        .HasColumnType("tinyint");

                    b.Property<byte>("Worried")
                        .HasColumnType("tinyint");

                    b.Property<int?>("YearId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ChildId");

                    b.HasIndex("YearId");

                    b.ToTable("Questionnaires.Data.SectionC","EDI");
                });

            modelBuilder.Entity("EDI.ApplicationCore.Entities.QuestionnairesDataSectionD", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AssessSpecify")
                        .HasColumnType("nvarchar(max)");

                    b.Property<byte>("Behavioural")
                        .HasColumnType("tinyint");

                    b.Property<int>("ChildId")
                        .HasColumnType("int");

                    b.Property<byte>("Chronic")
                        .HasColumnType("tinyint");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnType("varchar(256)")
                        .HasDefaultValueSql("('admin')")
                        .HasMaxLength(256)
                        .IsUnicode(false);

                    b.Property<DateTime>("CreatedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<byte>("Dental")
                        .HasColumnType("tinyint");

                    b.Property<byte>("Emotional")
                        .HasColumnType("tinyint");

                    b.Property<byte>("Further")
                        .HasColumnType("tinyint");

                    b.Property<byte>("Hearing")
                        .HasColumnType("tinyint");

                    b.Property<byte>("Language")
                        .HasColumnType("tinyint");

                    b.Property<string>("LanguageCompleted")
                        .HasColumnType("nvarchar(10)")
                        .HasMaxLength(10);

                    b.Property<byte>("Learning")
                        .HasColumnType("tinyint");

                    b.Property<string>("ModifiedBy")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnType("varchar(256)")
                        .HasDefaultValueSql("('admin')")
                        .HasMaxLength(256)
                        .IsUnicode(false);

                    b.Property<DateTime>("ModifiedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<byte>("NeedsAssess")
                        .HasColumnType("tinyint");

                    b.Property<byte>("Other")
                        .HasColumnType("tinyint");

                    b.Property<string>("OtherSpecialProblem")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("OtherSpecify")
                        .HasColumnType("nvarchar(max)");

                    b.Property<byte>("Physical")
                        .HasColumnType("tinyint");

                    b.Property<byte>("Problem")
                        .HasColumnType("tinyint");

                    b.Property<byte>("SpecialProblem1")
                        .HasColumnType("tinyint");

                    b.Property<byte>("SpecialProblem2")
                        .HasColumnType("tinyint");

                    b.Property<byte>("SpecialProblem3")
                        .HasColumnType("tinyint");

                    b.Property<byte>("Speech")
                        .HasColumnType("tinyint");

                    b.Property<byte>("Support")
                        .HasColumnType("tinyint");

                    b.Property<byte>("Visual")
                        .HasColumnType("tinyint");

                    b.Property<byte>("WaitList")
                        .HasColumnType("tinyint");

                    b.Property<int?>("YearId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ChildId");

                    b.HasIndex("YearId");

                    b.ToTable("Questionnaires.Data.SectionD","EDI");
                });

            modelBuilder.Entity("EDI.ApplicationCore.Entities.QuestionnairesDataSectionE", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<byte>("Birth1")
                        .HasColumnType("tinyint");

                    b.Property<int>("ChildId")
                        .HasColumnType("int");

                    b.Property<byte>("Clubs")
                        .HasColumnType("tinyint");

                    b.Property<string>("Comments")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnType("varchar(256)")
                        .HasDefaultValueSql("('admin')")
                        .HasMaxLength(256)
                        .IsUnicode(false);

                    b.Property<DateTime>("CreatedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<byte>("Cultural")
                        .HasColumnType("tinyint");

                    b.Property<byte>("FamilyLiteracy")
                        .HasColumnType("tinyint");

                    b.Property<byte>("FamilyResource")
                        .HasColumnType("tinyint");

                    b.Property<byte>("Four5")
                        .HasColumnType("tinyint");

                    b.Property<byte>("Langauges")
                        .HasColumnType("tinyint");

                    b.Property<string>("LanguageCompleted")
                        .HasColumnType("nvarchar(10)")
                        .HasMaxLength(10);

                    b.Property<byte>("LibraryReading")
                        .HasColumnType("tinyint");

                    b.Property<string>("ModifiedBy")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnType("varchar(256)")
                        .HasDefaultValueSql("('admin')")
                        .HasMaxLength(256)
                        .IsUnicode(false);

                    b.Property<DateTime>("ModifiedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<byte>("MusicArts")
                        .HasColumnType("tinyint");

                    b.Property<byte>("One2")
                        .HasColumnType("tinyint");

                    b.Property<byte>("Other")
                        .HasColumnType("tinyint");

                    b.Property<byte>("OtherSpecify")
                        .HasColumnType("tinyint");

                    b.Property<byte>("Religion")
                        .HasColumnType("tinyint");

                    b.Property<byte>("Sports")
                        .HasColumnType("tinyint");

                    b.Property<byte>("Three4")
                        .HasColumnType("tinyint");

                    b.Property<byte>("Two3")
                        .HasColumnType("tinyint");

                    b.Property<int?>("YearId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ChildId");

                    b.HasIndex("YearId");

                    b.ToTable("Questionnaires.Data.SectionE","EDI");
                });

            modelBuilder.Entity("EDI.ApplicationCore.Entities.QuestionnairesDataTeacherProfile", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<byte?>("AgeCategory")
                        .HasColumnType("tinyint");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnType("varchar(256)")
                        .HasDefaultValueSql("('admin')")
                        .HasMaxLength(256)
                        .IsUnicode(false);

                    b.Property<DateTime>("CreatedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<byte?>("EducationBachelorDegree")
                        .HasColumnType("tinyint");

                    b.Property<byte?>("EducationBachelorEducationDegree")
                        .HasColumnType("tinyint");

                    b.Property<byte?>("EducationMastersCourses")
                        .HasColumnType("tinyint");

                    b.Property<byte?>("EducationMastersDegree")
                        .HasColumnType("tinyint");

                    b.Property<byte?>("EducationOther")
                        .HasColumnType("tinyint");

                    b.Property<string>("EducationOtherComment")
                        .HasColumnType("nvarchar(max)");

                    b.Property<byte?>("EducationPhd")
                        .HasColumnType("tinyint");

                    b.Property<byte?>("EducationPhdcourses")
                        .HasColumnType("tinyint");

                    b.Property<byte?>("EducationPostBachelorCertificate")
                        .HasColumnType("tinyint");

                    b.Property<byte?>("EducationPostBachelorCourses")
                        .HasColumnType("tinyint");

                    b.Property<byte?>("EducationSomeCoursesBachelors")
                        .HasColumnType("tinyint");

                    b.Property<byte?>("EducationTeachingCertificate")
                        .HasColumnType("tinyint");

                    b.Property<short?>("ExperienceGradeInYears")
                        .HasColumnType("smallint");

                    b.Property<short?>("ExperienceInYears")
                        .HasColumnType("smallint");

                    b.Property<short?>("ExperienceSchoolInYears")
                        .HasColumnType("smallint");

                    b.Property<byte?>("FirstTimeCompletingEdi")
                        .HasColumnType("tinyint");

                    b.Property<byte?>("Gender")
                        .HasColumnType("tinyint");

                    b.Property<string>("GuideOtherComment")
                        .HasColumnType("nvarchar(max)");

                    b.Property<byte?>("GuideUsefulness")
                        .HasColumnType("tinyint");

                    b.Property<string>("LanguageCompleted")
                        .HasColumnType("nvarchar(10)")
                        .HasMaxLength(10);

                    b.Property<string>("ModifiedBy")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnType("varchar(256)")
                        .HasDefaultValueSql("('admin')")
                        .HasMaxLength(256)
                        .IsUnicode(false);

                    b.Property<DateTime>("ModifiedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<byte?>("PreviouslyAttendedTeacherTraining")
                        .HasColumnType("tinyint");

                    b.Property<int>("TeacherId")
                        .HasColumnType("int");

                    b.Property<byte?>("TeacherTrainingForThisImplementation")
                        .HasColumnType("tinyint");

                    b.Property<byte?>("TeacherTrainingUsefulness")
                        .HasColumnType("tinyint");

                    b.Property<byte?>("TimesAttendedTeacherTraining")
                        .HasColumnType("tinyint");

                    b.Property<byte?>("TimesCompletedEdi")
                        .HasColumnType("tinyint");

                    b.Property<int?>("YearId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("TeacherId");

                    b.HasIndex("YearId");

                    b.ToTable("Questionnaires.Data.TeacherProfile","EDI");
                });

            modelBuilder.Entity("EDI.ApplicationCore.Entities.School", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("City")
                        .HasColumnType("varchar(max)")
                        .IsUnicode(false);

                    b.Property<int>("CountryId")
                        .HasColumnType("int");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("varchar(256)")
                        .HasMaxLength(256)
                        .IsUnicode(false);

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("varchar(max)")
                        .IsUnicode(false);

                    b.Property<string>("ModifiedBy")
                        .IsRequired()
                        .HasColumnType("varchar(256)")
                        .HasMaxLength(256)
                        .IsUnicode(false);

                    b.Property<DateTime>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("ProvinceId")
                        .HasColumnType("int");

                    b.Property<string>("SchoolName")
                        .HasColumnType("varchar(max)")
                        .IsUnicode(false);

                    b.Property<string>("SchoolNumber")
                        .HasColumnType("varchar(max)")
                        .IsUnicode(false);

                    b.Property<int>("SiteId")
                        .HasColumnType("int");

                    b.Property<int?>("YearId")
                        .HasColumnName("YearID")
                        .HasColumnType("int")
                        .HasComment("Year of the EDI implementation");

                    b.HasKey("Id");

                    b.HasIndex("CountryId");

                    b.HasIndex("ProvinceId");

                    b.HasIndex("SiteId");

                    b.HasIndex("YearId");

                    b.ToTable("Schools","EDI");
                });

            modelBuilder.Entity("EDI.ApplicationCore.Entities.Site", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CoordinatorId")
                        .HasColumnType("int")
                        .IsUnicode(false);

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("varchar(256)")
                        .HasMaxLength(256)
                        .IsUnicode(false);

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("varchar(max)")
                        .IsUnicode(false);

                    b.Property<string>("ModifiedBy")
                        .IsRequired()
                        .HasColumnType("varchar(256)")
                        .HasMaxLength(256)
                        .IsUnicode(false);

                    b.Property<DateTime>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("SiteName")
                        .HasColumnType("varchar(max)")
                        .IsUnicode(false);

                    b.Property<string>("SiteNumber")
                        .HasColumnType("varchar(max)")
                        .IsUnicode(false);

                    b.Property<int?>("YearId")
                        .HasColumnName("YearID")
                        .HasColumnType("int")
                        .HasComment("Year of the EDI implementation");

                    b.HasKey("Id");

                    b.HasIndex("CoordinatorId");

                    b.HasIndex("YearId");

                    b.ToTable("Sites","EDI");
                });

            modelBuilder.Entity("EDI.ApplicationCore.Entities.SpecialProblem", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasColumnType("nvarchar(3)")
                        .HasMaxLength(3);

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("varchar(256)")
                        .HasMaxLength(256)
                        .IsUnicode(false);

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("English")
                        .HasColumnType("nvarchar(150)")
                        .HasMaxLength(150);

                    b.Property<string>("French")
                        .HasColumnType("nvarchar(150)")
                        .HasMaxLength(150);

                    b.Property<string>("ModifiedBy")
                        .IsRequired()
                        .HasColumnType("varchar(256)")
                        .HasMaxLength(256)
                        .IsUnicode(false);

                    b.Property<DateTime>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("Sequence")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("SpecialProblems","LUData");
                });

            modelBuilder.Entity("EDI.ApplicationCore.Entities.SystemConfigurations", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("varchar(256)")
                        .HasMaxLength(256)
                        .IsUnicode(false);

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("FieldName")
                        .HasColumnType("varchar(max)")
                        .IsUnicode(false);

                    b.Property<string>("FieldValue")
                        .HasColumnType("varchar(max)")
                        .IsUnicode(false);

                    b.Property<string>("ModifiedBy")
                        .IsRequired()
                        .HasColumnType("varchar(256)")
                        .HasMaxLength(256)
                        .IsUnicode(false);

                    b.Property<DateTime>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("SystemConfigurations","dbo");
                });

            modelBuilder.Entity("EDI.ApplicationCore.Entities.Teacher", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("varchar(256)")
                        .HasMaxLength(256)
                        .IsUnicode(false);

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("ModifiedBy")
                        .IsRequired()
                        .HasColumnType("varchar(256)")
                        .HasMaxLength(256)
                        .IsUnicode(false);

                    b.Property<DateTime>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(14)")
                        .HasMaxLength(14);

                    b.Property<int?>("SchoolId")
                        .HasColumnName("SchoolID")
                        .HasColumnType("int");

                    b.Property<string>("TeacherName")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("TeacherNumber")
                        .HasColumnType("nvarchar(15)")
                        .HasMaxLength(15);

                    b.Property<string>("UserId")
                        .HasColumnName("UserID")
                        .HasColumnType("nvarchar(40)")
                        .HasComment("Links to user in EDI.Identity database")
                        .HasMaxLength(40);

                    b.Property<int?>("YearId")
                        .HasColumnName("YearID")
                        .HasColumnType("int")
                        .HasComment("Year of the EDI implementation");

                    b.HasKey("Id");

                    b.HasIndex("SchoolId");

                    b.HasIndex("YearId");

                    b.ToTable("Teachers","EDI");
                });

            modelBuilder.Entity("EDI.ApplicationCore.Entities.Translation", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("varchar(256)")
                        .HasMaxLength(256)
                        .IsUnicode(false);

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("English")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("French")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ModifiedBy")
                        .IsRequired()
                        .HasColumnType("varchar(256)")
                        .HasMaxLength(256)
                        .IsUnicode(false);

                    b.Property<DateTime>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Translations","LUData");
                });

            modelBuilder.Entity("EDI.ApplicationCore.Entities.Year", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool?>("Alberta")
                        .HasColumnType("bit");

                    b.Property<bool?>("BritishColumbia")
                        .HasColumnType("bit");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("varchar(256)")
                        .HasMaxLength(256)
                        .IsUnicode(false);

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<short?>("Ediyear")
                        .HasColumnName("EDIYear")
                        .HasColumnType("smallint");

                    b.Property<bool?>("Manitoba")
                        .HasColumnType("bit");

                    b.Property<string>("ModifiedBy")
                        .IsRequired()
                        .HasColumnType("varchar(256)")
                        .HasMaxLength(256)
                        .IsUnicode(false);

                    b.Property<DateTime>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool?>("NewBrunswick")
                        .HasColumnType("bit");

                    b.Property<bool?>("NewfoundlandandLabrador")
                        .HasColumnType("bit");

                    b.Property<bool?>("NorthwestTerritories")
                        .HasColumnType("bit");

                    b.Property<bool?>("NovaScotia")
                        .HasColumnType("bit");

                    b.Property<bool?>("Nunavut")
                        .HasColumnType("bit");

                    b.Property<bool?>("Ontario")
                        .HasColumnType("bit");

                    b.Property<bool?>("PrinceEdwardIsland")
                        .HasColumnType("bit");

                    b.Property<bool?>("Quebec")
                        .HasColumnType("bit");

                    b.Property<bool?>("Saskatchewan")
                        .HasColumnType("bit");

                    b.Property<bool?>("YukonTerritory")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.ToTable("Years","LUData");
                });

            modelBuilder.Entity("EDI.ApplicationCore.Entities.Child", b =>
                {
                    b.HasOne("EDI.ApplicationCore.Entities.Gender", "Gender")
                        .WithMany("Children")
                        .HasForeignKey("GenderId")
                        .HasConstraintName("FK_Gender_Children")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("EDI.ApplicationCore.Entities.Teacher", "Teacher")
                        .WithMany("Children")
                        .HasForeignKey("TeacherId")
                        .HasConstraintName("FK_Teachers_Children")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("EDI.ApplicationCore.Entities.Year", "Year")
                        .WithMany("Children")
                        .HasForeignKey("YearId")
                        .HasConstraintName("FK_Years_Children");
                });

            modelBuilder.Entity("EDI.ApplicationCore.Entities.Coordinator", b =>
                {
                    b.HasOne("EDI.ApplicationCore.Entities.Year", "Year")
                        .WithMany("Coordinators")
                        .HasForeignKey("YearId")
                        .HasConstraintName("FK_Years_Coordinators");
                });

            modelBuilder.Entity("EDI.ApplicationCore.Entities.Faq", b =>
                {
                    b.HasOne("EDI.ApplicationCore.Entities.Year", "Year")
                        .WithMany("Faqs")
                        .HasForeignKey("YearId")
                        .HasConstraintName("FK_Years_FAQ")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("EDI.ApplicationCore.Entities.FileImport", b =>
                {
                    b.HasOne("EDI.ApplicationCore.Entities.FileImportStatus", "FileImportStatus")
                        .WithMany("FileImports")
                        .HasForeignKey("FileImportStatusId")
                        .HasConstraintName("FK_FileImportStatus_FileImports")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("EDI.ApplicationCore.Entities.Gender", "Gender")
                        .WithMany("FileImports")
                        .HasForeignKey("GenderId")
                        .HasConstraintName("FK_Gender_FileImports")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("EDI.ApplicationCore.Entities.InputType", b =>
                {
                    b.HasOne("EDI.ApplicationCore.Entities.Year", "Year")
                        .WithMany("InputTypes")
                        .HasForeignKey("YearId")
                        .HasConstraintName("FK_Years_InputTypes")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("EDI.ApplicationCore.Entities.Link", b =>
                {
                    b.HasOne("EDI.ApplicationCore.Entities.Year", "Year")
                        .WithMany("Links")
                        .HasForeignKey("YearId")
                        .HasConstraintName("FK_Years_Links")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("EDI.ApplicationCore.Entities.LookupSet", b =>
                {
                    b.HasOne("EDI.ApplicationCore.Entities.Year", "Year")
                        .WithMany("LookupSets")
                        .HasForeignKey("YearId")
                        .HasConstraintName("FK_Years_LookupSets")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("EDI.ApplicationCore.Entities.LookupSetOption", b =>
                {
                    b.HasOne("EDI.ApplicationCore.Entities.LookupSet", "LookupSet")
                        .WithMany("LookupSetOptions")
                        .HasForeignKey("LookupSetId")
                        .HasConstraintName("FK_LookupSet_LookupSetOptions")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("EDI.ApplicationCore.Entities.NewsFeed", b =>
                {
                    b.HasOne("EDI.ApplicationCore.Entities.Year", "Year")
                        .WithMany("NewsFeeds")
                        .HasForeignKey("YearId")
                        .HasConstraintName("FK_Years_NewsFeeds")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("EDI.ApplicationCore.Entities.Orientation", b =>
                {
                    b.HasOne("EDI.ApplicationCore.Entities.Year", "Year")
                        .WithMany("Orientations")
                        .HasForeignKey("YearId")
                        .HasConstraintName("FK_Years_Orientations")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("EDI.ApplicationCore.Entities.Province", b =>
                {
                    b.HasOne("EDI.ApplicationCore.Entities.Country", "Country")
                        .WithMany("Provinces")
                        .HasForeignKey("CountryID")
                        .HasConstraintName("FK_Country_Provinces")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("EDI.ApplicationCore.Entities.ProvinceType", "ProvinceType")
                        .WithMany("Provinces")
                        .HasForeignKey("ProvinceTypeId")
                        .HasConstraintName("FK_ProvinceType_Provinces");
                });

            modelBuilder.Entity("EDI.ApplicationCore.Entities.Questionnaire", b =>
                {
                    b.HasOne("EDI.ApplicationCore.Entities.Year", "Year")
                        .WithMany("Questionnaires")
                        .HasForeignKey("YearId")
                        .HasConstraintName("FK_Years_Questionnaires")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("EDI.ApplicationCore.Entities.QuestionnairesConfiguration", b =>
                {
                    b.HasOne("EDI.ApplicationCore.Entities.InputType", "InputType")
                        .WithMany("QuestionnairesConfigurations")
                        .HasForeignKey("InputTypeId")
                        .HasConstraintName("FK_InputType_QuestionnairesConfigurations")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("EDI.ApplicationCore.Entities.LookupSet", "LookupSet")
                        .WithMany("QuestionnairesConfigurations")
                        .HasForeignKey("LookupEntityId")
                        .HasConstraintName("FK_LookupSet_QuestionnaireConfiguration");

                    b.HasOne("EDI.ApplicationCore.Entities.Orientation", "Orientation")
                        .WithMany("QuestionnairesConfigurations")
                        .HasForeignKey("OrientationId")
                        .HasConstraintName("FK_Orientation_QuestionnairesConfigurations")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.HasOne("EDI.ApplicationCore.Entities.Questionnaire", "Questionnaire")
                        .WithMany("QuestionnairesConfigurations")
                        .HasForeignKey("QuestionnaireId")
                        .HasConstraintName("FK_Questionnaire_QuestionnairesConfigurations")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("EDI.ApplicationCore.Entities.Year", "Year")
                        .WithMany("QuestionnairesConfigurations")
                        .HasForeignKey("YearId")
                        .HasConstraintName("FK_Years_Questionnaires.Configurations")
                        .OnDelete(DeleteBehavior.NoAction);
                });

            modelBuilder.Entity("EDI.ApplicationCore.Entities.QuestionnairesDataDemographic", b =>
                {
                    b.HasOne("EDI.ApplicationCore.Entities.Child", "Child")
                        .WithMany("QuestionnairesDataDemographics")
                        .HasForeignKey("ChildId")
                        .HasConstraintName("FK_Children_Questionnaires.Data.Demographics")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("EDI.ApplicationCore.Entities.Year", "Year")
                        .WithMany("QuestionnairesDataDemographics")
                        .HasForeignKey("YearId")
                        .HasConstraintName("FK_Years_Questionnaires.Data.Demographics")
                        .OnDelete(DeleteBehavior.NoAction);
                });

            modelBuilder.Entity("EDI.ApplicationCore.Entities.QuestionnairesDataSectionA", b =>
                {
                    b.HasOne("EDI.ApplicationCore.Entities.Child", "Child")
                        .WithMany("QuestionnairesDataSectionAs")
                        .HasForeignKey("ChildId")
                        .HasConstraintName("FK_Children_Questionnaires.Data.SectionAs")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("EDI.ApplicationCore.Entities.Year", "Year")
                        .WithMany("QuestionnairesDataSectionAs")
                        .HasForeignKey("YearId")
                        .HasConstraintName("FK_Years_Questionnaires.Data.SectionA")
                        .OnDelete(DeleteBehavior.NoAction);
                });

            modelBuilder.Entity("EDI.ApplicationCore.Entities.QuestionnairesDataSectionB", b =>
                {
                    b.HasOne("EDI.ApplicationCore.Entities.Child", "Child")
                        .WithMany("QuestionnairesDataSectionBs")
                        .HasForeignKey("ChildId")
                        .HasConstraintName("FK_Children_Questionnaires.Data.SectionBs")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("EDI.ApplicationCore.Entities.Year", "Year")
                        .WithMany("QuestionnairesDataSectionBs")
                        .HasForeignKey("YearId")
                        .HasConstraintName("FK_Years_Questionnaires.Data.SectionB")
                        .OnDelete(DeleteBehavior.NoAction);
                });

            modelBuilder.Entity("EDI.ApplicationCore.Entities.QuestionnairesDataSectionC", b =>
                {
                    b.HasOne("EDI.ApplicationCore.Entities.Child", "Child")
                        .WithMany("QuestionnairesDataSectionCs")
                        .HasForeignKey("ChildId")
                        .HasConstraintName("FK_Children_Questionnaires.Data.SectionCs")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("EDI.ApplicationCore.Entities.Year", "Year")
                        .WithMany("QuestionnairesDataSectionCs")
                        .HasForeignKey("YearId")
                        .HasConstraintName("FK_Years_Questionnaires.Data.SectionC")
                        .OnDelete(DeleteBehavior.NoAction);
                });

            modelBuilder.Entity("EDI.ApplicationCore.Entities.QuestionnairesDataSectionD", b =>
                {
                    b.HasOne("EDI.ApplicationCore.Entities.Child", "Child")
                        .WithMany("QuestionnairesDataSectionDs")
                        .HasForeignKey("ChildId")
                        .HasConstraintName("FK_Children_Questionnaires.Data.SectionDs")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("EDI.ApplicationCore.Entities.Year", "Year")
                        .WithMany("QuestionnairesDataSectionDs")
                        .HasForeignKey("YearId")
                        .HasConstraintName("FK_Years_Questionnaires.Data.SectionD")
                        .OnDelete(DeleteBehavior.NoAction);
                });

            modelBuilder.Entity("EDI.ApplicationCore.Entities.QuestionnairesDataSectionE", b =>
                {
                    b.HasOne("EDI.ApplicationCore.Entities.Child", "Child")
                        .WithMany("QuestionnairesDataSectionEs")
                        .HasForeignKey("ChildId")
                        .HasConstraintName("FK_Children_Questionnaires.Data.SectionEs")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("EDI.ApplicationCore.Entities.Year", "Year")
                        .WithMany("QuestionnairesDataSectionEs")
                        .HasForeignKey("YearId")
                        .HasConstraintName("FK_Years_Questionnaires.Data.SectionE")
                        .OnDelete(DeleteBehavior.NoAction);
                });

            modelBuilder.Entity("EDI.ApplicationCore.Entities.QuestionnairesDataTeacherProfile", b =>
                {
                    b.HasOne("EDI.ApplicationCore.Entities.Teacher", "Teacher")
                        .WithMany("QuestionnairesDataTeacherProfiles")
                        .HasForeignKey("TeacherId")
                        .HasConstraintName("FK_Teachers_QuestionnairesDataTeacherProfiles")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("EDI.ApplicationCore.Entities.Year", "Year")
                        .WithMany("QuestionnairesDataTeacherProfiles")
                        .HasForeignKey("YearId")
                        .HasConstraintName("FK_Years_Questionnaires.Data.TeacherProfile")
                        .OnDelete(DeleteBehavior.NoAction);
                });

            modelBuilder.Entity("EDI.ApplicationCore.Entities.School", b =>
                {
                    b.HasOne("EDI.ApplicationCore.Entities.Country", "Country")
                        .WithMany("Schools")
                        .HasForeignKey("CountryId")
                        .HasConstraintName("FK_Country_Schools")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("EDI.ApplicationCore.Entities.Province", "Province")
                        .WithMany("Schools")
                        .HasForeignKey("ProvinceId")
                        .HasConstraintName("FK_Schools_Provinces")
                        .IsRequired();

                    b.HasOne("EDI.ApplicationCore.Entities.Site", "Site")
                        .WithMany("Schools")
                        .HasForeignKey("SiteId")
                        .HasConstraintName("FK_Sites_Schools")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("EDI.ApplicationCore.Entities.Year", "Year")
                        .WithMany("Schools")
                        .HasForeignKey("YearId")
                        .HasConstraintName("FK_Years_Schools");
                });

            modelBuilder.Entity("EDI.ApplicationCore.Entities.Site", b =>
                {
                    b.HasOne("EDI.ApplicationCore.Entities.Coordinator", "Coordinator")
                        .WithMany("Sites")
                        .HasForeignKey("CoordinatorId")
                        .HasConstraintName("FK_Coordinators_Sites")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("EDI.ApplicationCore.Entities.Year", "Year")
                        .WithMany("Sites")
                        .HasForeignKey("YearId")
                        .HasConstraintName("FK_Years_Sites")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("EDI.ApplicationCore.Entities.Teacher", b =>
                {
                    b.HasOne("EDI.ApplicationCore.Entities.School", "School")
                        .WithMany("Teachers")
                        .HasForeignKey("SchoolId")
                        .HasConstraintName("FK_Schools_Teachers")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("EDI.ApplicationCore.Entities.Year", "Year")
                        .WithMany("Teachers")
                        .HasForeignKey("YearId")
                        .HasConstraintName("FK_Years_Teachers");
                });
#pragma warning restore 612, 618
        }
    }
}
