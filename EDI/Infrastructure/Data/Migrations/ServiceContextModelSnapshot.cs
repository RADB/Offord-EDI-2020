// <auto-generated />
using System;
using EDI.Infrastructure.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace EDI.Infrastructure.Data.Migrations
{
    [DbContext(typeof(ServiceContext))]
    partial class ServiceContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("EDI.ApplicationCore.Entities.Coordinator", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CoordinatorName")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("varchar(max)")
                        .IsUnicode(false);

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(14)")
                        .HasMaxLength(14);

                    b.Property<string>("UserId")
                        .HasColumnName("UserID")
                        .HasColumnType("nvarchar(40)")
                        .HasMaxLength(40);

                    b.Property<int?>("YearId")
                        .HasColumnName("YearID")
                        .HasColumnType("int")
                        .HasComment("Year of the EDI implementation");

                    b.HasKey("Id");

                    b.HasIndex("YearId");

                    b.ToTable("Coordinators","EDI");
                });

            modelBuilder.Entity("EDI.ApplicationCore.Entities.Country", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Code")
                        .HasColumnName("Code")
                        .HasColumnType("int");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(256)")
                        .HasMaxLength(256);

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("English")
                        .IsRequired()
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("French")
                        .IsRequired()
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("ISO2CountryCode")
                        .IsRequired()
                        .HasColumnName("ISO2CountryCode")
                        .HasColumnType("nvarchar(2)")
                        .HasMaxLength(2);

                    b.Property<string>("ISO3CountryCode")
                        .IsRequired()
                        .HasColumnName("ISO3CountryCode")
                        .HasColumnType("nvarchar(3)")
                        .HasMaxLength(3);

                    b.Property<string>("ModifiedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(256)")
                        .HasMaxLength(256);

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Countries","LUData");
                });

            modelBuilder.Entity("EDI.ApplicationCore.Entities.DateDimension", b =>
                {
                    b.Property<DateTime>("Date")
                        .HasColumnType("date");

                    b.Property<byte>("DOWInMonth")
                        .HasColumnType("tinyint");

                    b.Property<byte>("Day")
                        .HasColumnType("tinyint");

                    b.Property<short>("DayOfYear")
                        .HasColumnType("smallint");

                    b.Property<string>("DaySuffix")
                        .IsRequired()
                        .HasColumnType("char(2)")
                        .IsFixedLength(true)
                        .HasMaxLength(2)
                        .IsUnicode(false);

                    b.Property<DateTime>("FirstDayOfMonth")
                        .HasColumnType("date");

                    b.Property<DateTime>("FirstDayOfNextMonth")
                        .HasColumnType("date");

                    b.Property<DateTime>("FirstDayOfNextYear")
                        .HasColumnType("date");

                    b.Property<DateTime>("FirstDayOfQuarter")
                        .HasColumnType("date");

                    b.Property<DateTime>("FirstDayOfYear")
                        .HasColumnType("date");

                    b.Property<int>("FiscalYear")
                        .HasColumnType("int");

                    b.Property<int>("FiscalYearMonth")
                        .HasColumnType("int");

                    b.Property<int>("FiscalYearMonthOrder")
                        .HasColumnType("int");

                    b.Property<string>("HolidayText")
                        .HasColumnType("varchar(64)")
                        .HasMaxLength(64)
                        .IsUnicode(false);

                    b.Property<byte>("ISOWeekOfYear")
                        .HasColumnType("tinyint");

                    b.Property<bool>("IsHoliday")
                        .HasColumnType("bit");

                    b.Property<bool>("IsWeekend")
                        .HasColumnType("bit");

                    b.Property<DateTime>("LastDayOfMonth")
                        .HasColumnType("date");

                    b.Property<DateTime>("LastDayOfQuarter")
                        .HasColumnType("date");

                    b.Property<DateTime>("LastDayOfYear")
                        .HasColumnType("date");

                    b.Property<byte>("Month")
                        .HasColumnType("tinyint");

                    b.Property<string>("MonthName")
                        .IsRequired()
                        .HasColumnType("varchar(10)")
                        .HasMaxLength(10)
                        .IsUnicode(false);

                    b.Property<byte>("Quarter")
                        .HasColumnType("tinyint");

                    b.Property<string>("QuarterName")
                        .IsRequired()
                        .HasColumnType("varchar(6)")
                        .HasMaxLength(6)
                        .IsUnicode(false);

                    b.Property<string>("WeekDayName")
                        .IsRequired()
                        .HasColumnType("varchar(10)")
                        .HasMaxLength(10)
                        .IsUnicode(false);

                    b.Property<byte>("WeekOfMonth")
                        .HasColumnType("tinyint");

                    b.Property<byte>("WeekOfYear")
                        .HasColumnType("tinyint");

                    b.Property<byte>("Weekday")
                        .HasColumnType("tinyint");

                    b.Property<int>("Year")
                        .HasColumnType("int");

                    b.Property<int>("YearMonth")
                        .HasColumnType("int");

                    b.HasKey("Date");

                    b.ToTable("DateDimension");
                });

            modelBuilder.Entity("EDI.ApplicationCore.Entities.FormConfigurations", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CreatedBy")
                        .HasColumnType("varchar(max)")
                        .IsUnicode(false);

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("FieldName")
                        .HasColumnType("varchar(max)")
                        .IsUnicode(false);

                    b.Property<string>("FormName")
                        .HasColumnType("varchar(max)")
                        .IsUnicode(false);

                    b.Property<bool>("IsEnabled")
                        .HasColumnType("bit");

                    b.Property<bool>("IsRequired")
                        .HasColumnType("bit");

                    b.Property<bool>("IsVisible")
                        .HasColumnType("bit");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("varchar(max)")
                        .IsUnicode(false);

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("Order")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("FormConfigurations");
                });

            modelBuilder.Entity("EDI.ApplicationCore.Entities.Language", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasColumnType("nvarchar(3)")
                        .HasMaxLength(3);

                    b.Property<string>("CreatedBy")
                        .HasColumnType("varchar(max)")
                        .IsUnicode(false);

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("English")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("French")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("varchar(max)")
                        .IsUnicode(false);

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("Sequence")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Languages","LUData");
                });

            modelBuilder.Entity("EDI.ApplicationCore.Entities.Province", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<int>("CountryID")
                        .HasColumnName("CountryID")
                        .HasColumnType("int");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(64)")
                        .HasMaxLength(64);

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("English")
                        .IsRequired()
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("French")
                        .IsRequired()
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("ModifiedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(64)")
                        .HasMaxLength(64);

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("ProvinceTypeId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CountryID");

                    b.HasIndex("ProvinceTypeId");

                    b.ToTable("Provinces","LUData");
                });

            modelBuilder.Entity("EDI.ApplicationCore.Entities.ProvinceType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(64)")
                        .HasMaxLength(64);

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("ModifiedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(64)")
                        .HasMaxLength(64);

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.HasKey("Id");

                    b.ToTable("ProvinceType","LUData");
                });

            modelBuilder.Entity("EDI.ApplicationCore.Entities.School", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("City")
                        .HasColumnType("varchar(max)")
                        .IsUnicode(false);

                    b.Property<int>("CountryId")
                        .HasColumnType("int");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("varchar(max)")
                        .IsUnicode(false);

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("varchar(max)")
                        .IsUnicode(false);

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("varchar(max)")
                        .IsUnicode(false);

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("ProvinceId")
                        .HasColumnType("int");

                    b.Property<string>("SchoolName")
                        .HasColumnType("varchar(max)")
                        .IsUnicode(false);

                    b.Property<string>("SchoolNumber")
                        .HasColumnType("varchar(max)")
                        .IsUnicode(false);

                    b.Property<int>("SiteId")
                        .HasColumnType("int");

                    b.Property<int?>("YearId")
                        .HasColumnName("YearID")
                        .HasColumnType("int")
                        .HasComment("Year of the EDI implementation");

                    b.HasKey("Id");

                    b.HasIndex("CountryId");

                    b.HasIndex("SiteId");

                    b.HasIndex("YearId");

                    b.ToTable("Schools","EDI");
                });

            modelBuilder.Entity("EDI.ApplicationCore.Entities.Site", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CoordinatorId")
                        .HasColumnType("varchar(max)")
                        .IsUnicode(false);

                    b.Property<string>("CreatedBy")
                        .HasColumnType("varchar(max)")
                        .IsUnicode(false);

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("varchar(max)")
                        .IsUnicode(false);

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("varchar(max)")
                        .IsUnicode(false);

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("SiteName")
                        .HasColumnType("varchar(max)")
                        .IsUnicode(false);

                    b.Property<string>("SiteNumber")
                        .HasColumnType("varchar(max)")
                        .IsUnicode(false);

                    b.Property<int?>("YearId")
                        .HasColumnName("YearID")
                        .HasColumnType("int")
                        .HasComment("Year of the EDI implementation");

                    b.HasKey("Id");

                    b.HasIndex("YearId");

                    b.ToTable("Sites","EDI");
                });

            modelBuilder.Entity("EDI.ApplicationCore.Entities.SpecialProblem", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasColumnType("nvarchar(3)")
                        .HasMaxLength(3);

                    b.Property<string>("CreatedBy")
                        .HasColumnType("varchar(max)")
                        .IsUnicode(false);

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("English")
                        .HasColumnType("nvarchar(150)")
                        .HasMaxLength(150);

                    b.Property<string>("French")
                        .HasColumnType("nvarchar(150)")
                        .HasMaxLength(150);

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("varchar(max)")
                        .IsUnicode(false);

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("Sequence")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("SpecialProblems","LUData");
                });

            modelBuilder.Entity("EDI.ApplicationCore.Entities.SystemConfigurations", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CreatedBy")
                        .HasColumnType("varchar(max)")
                        .IsUnicode(false);

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("FieldName")
                        .HasColumnType("varchar(max)")
                        .IsUnicode(false);

                    b.Property<string>("FieldValue")
                        .HasColumnType("varchar(max)")
                        .IsUnicode(false);

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("varchar(max)")
                        .IsUnicode(false);

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("SystemConfigurations");
                });

            modelBuilder.Entity("EDI.ApplicationCore.Entities.Teacher", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<byte?>("Age")
                        .HasColumnType("tinyint");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("varchar(max)")
                        .IsUnicode(false);

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<byte?>("EducationBachelorDegree")
                        .HasColumnType("tinyint");

                    b.Property<byte?>("EducationBachelorEducationDegree")
                        .HasColumnType("tinyint");

                    b.Property<byte?>("EducationMastersCourses")
                        .HasColumnType("tinyint");

                    b.Property<byte?>("EducationMastersDegree")
                        .HasColumnType("tinyint");

                    b.Property<byte?>("EducationOther")
                        .HasColumnType("tinyint");

                    b.Property<string>("EducationOtherComment")
                        .HasColumnType("nvarchar(255)")
                        .HasMaxLength(255);

                    b.Property<byte?>("EducationPhd")
                        .HasColumnName("EducationPHD")
                        .HasColumnType("tinyint");

                    b.Property<byte?>("EducationPhdcourses")
                        .HasColumnName("EducationPHDCourses")
                        .HasColumnType("tinyint");

                    b.Property<byte?>("EducationPostBachelorCertificate")
                        .HasColumnType("tinyint");

                    b.Property<byte?>("EducationPostBachelorCourses")
                        .HasColumnType("tinyint");

                    b.Property<byte?>("EducationSomeCoursesBachelors")
                        .HasColumnType("tinyint");

                    b.Property<byte?>("EducationTeachingCertificate")
                        .HasColumnType("tinyint");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<short?>("ExperienceAtClassInMonths")
                        .HasColumnType("smallint");

                    b.Property<short?>("ExperienceGradeInMonths")
                        .HasColumnType("smallint");

                    b.Property<short?>("ExperienceInMonths")
                        .HasColumnType("smallint");

                    b.Property<short?>("ExperienceSchoolInMonths")
                        .HasColumnType("smallint");

                    b.Property<byte?>("FirstTimeCompletingEdi")
                        .HasColumnName("FirstTimeCompletingEDI")
                        .HasColumnType("tinyint");

                    b.Property<byte?>("Gender")
                        .HasColumnType("tinyint");

                    b.Property<byte?>("GuideNotUsedDidntHave")
                        .HasColumnType("tinyint");

                    b.Property<byte?>("GuideNotUsedFamiliar")
                        .HasColumnType("tinyint");

                    b.Property<byte?>("GuideNotUsedNoTime")
                        .HasColumnType("tinyint");

                    b.Property<byte?>("GuideNotUsedNotHelpful")
                        .HasColumnType("tinyint");

                    b.Property<byte?>("GuideOther")
                        .HasColumnType("tinyint");

                    b.Property<string>("GuideOtherComment")
                        .HasColumnType("nvarchar(255)")
                        .HasMaxLength(255);

                    b.Property<byte?>("GuideUsedHelpful")
                        .HasColumnType("tinyint");

                    b.Property<byte?>("GuideUsedNotHelpful")
                        .HasColumnType("tinyint");

                    b.Property<string>("LanguageCompleted")
                        .HasColumnType("nvarchar(20)")
                        .HasComment("English or French")
                        .HasMaxLength(20);

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("varchar(max)")
                        .IsUnicode(false);

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(14)")
                        .HasMaxLength(14);

                    b.Property<byte?>("PreviouslyAttendedTeacherTraining")
                        .HasColumnType("tinyint");

                    b.Property<int?>("SchoolId")
                        .HasColumnName("SchoolID")
                        .HasColumnType("int");

                    b.Property<byte?>("StudentCount")
                        .HasColumnType("tinyint");

                    b.Property<string>("TeacherName")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<byte?>("TeacherTrainingForThisImplementation")
                        .HasColumnType("tinyint");

                    b.Property<byte?>("TeacherTrainingUsefulness")
                        .HasColumnType("tinyint");

                    b.Property<byte?>("TimesAttendedTeacherTraining")
                        .HasColumnType("tinyint");

                    b.Property<byte?>("TimesCompletedEdi")
                        .HasColumnName("TimesCompletedEDI")
                        .HasColumnType("tinyint")
                        .HasComment("1-4 or more");

                    b.Property<string>("UserId")
                        .HasColumnName("UserID")
                        .HasColumnType("nvarchar(40)")
                        .HasComment("Links to user in EDI.Identity database")
                        .HasMaxLength(40);

                    b.Property<int?>("YearId")
                        .HasColumnName("YearID")
                        .HasColumnType("int")
                        .HasComment("Year of the EDI implementation");

                    b.HasKey("Id");

                    b.HasIndex("SchoolId");

                    b.HasIndex("YearId");

                    b.ToTable("Teachers","EDI");
                });

            modelBuilder.Entity("EDI.ApplicationCore.Entities.Year", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CreatedBy")
                        .HasColumnType("varchar(max)")
                        .IsUnicode(false);

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<short?>("Ediyear")
                        .HasColumnName("EDIYear")
                        .HasColumnType("smallint");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("varchar(max)")
                        .IsUnicode(false);

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Years","LUData");
                });

            modelBuilder.Entity("EDI.ApplicationCore.Entities.Coordinator", b =>
                {
                    b.HasOne("EDI.ApplicationCore.Entities.Year", "Year")
                        .WithMany("Coordinators")
                        .HasForeignKey("YearId")
                        .HasConstraintName("FK_Years_Coordinators");
                });

            modelBuilder.Entity("EDI.ApplicationCore.Entities.Province", b =>
                {
                    b.HasOne("EDI.ApplicationCore.Entities.Country", "Country")
                        .WithMany("Provinces")
                        .HasForeignKey("CountryID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("EDI.ApplicationCore.Entities.ProvinceType", "ProvinceType")
                        .WithMany("Province")
                        .HasForeignKey("ProvinceTypeId");
                });

            modelBuilder.Entity("EDI.ApplicationCore.Entities.School", b =>
                {
                    b.HasOne("EDI.ApplicationCore.Entities.Country", "Countries")
                        .WithMany("Schools")
                        .HasForeignKey("CountryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("EDI.ApplicationCore.Entities.Site", "Sites")
                        .WithMany("Schools")
                        .HasForeignKey("SiteId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("EDI.ApplicationCore.Entities.Year", "Year")
                        .WithMany("Schools")
                        .HasForeignKey("YearId")
                        .HasConstraintName("FK_Years_Schools");
                });

            modelBuilder.Entity("EDI.ApplicationCore.Entities.Site", b =>
                {
                    b.HasOne("EDI.ApplicationCore.Entities.Year", "Year")
                        .WithMany("Sites")
                        .HasForeignKey("YearId")
                        .HasConstraintName("FK_Years_Sites");
                });

            modelBuilder.Entity("EDI.ApplicationCore.Entities.Teacher", b =>
                {
                    b.HasOne("EDI.ApplicationCore.Entities.School", "School")
                        .WithMany("Teachers")
                        .HasForeignKey("SchoolId")
                        .HasConstraintName("FK_Teachers_Schools");

                    b.HasOne("EDI.ApplicationCore.Entities.Year", "Year")
                        .WithMany("Teachers")
                        .HasForeignKey("YearId")
                        .HasConstraintName("FK_Years_Teachers");
                });
#pragma warning restore 612, 618
        }
    }
}
