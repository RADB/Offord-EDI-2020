@inherits QuestionnaireBase
@using Syncfusion.Blazor.Inputs
@using static EDI.Web.Data.Enumerations

<div class="row">
    <div class="col-12">
        <div class="card shadow mb-4">
            <div class="card-body">
                <div class="col-12">
                    <h4>@QuestionText</h4>
                    <div id="NumberBox" class="numberbox">
                        <!--if (DataType == NumericDataTypes.Int32)
                        {-->
                            <!--<SfNumericTextBox TValue="Int32?" Value=@IntValue Format="@NumberFormat" Step=@Convert.ToInt32(NumberStep) Min="0" Max="50"></SfNumericTextBox>-->
                            <!--<label for="@Config.EntityField">Label</label>
                            <input type="number" id="@Config.EntityField" name="@Config.EntityField" min=@Min max=@Max step=@NumberStep />
                        }
                        else if (DataType == NumericDataTypes.Double)
                        {
                            <SfNumericTextBox TValue="Double?" Value=@DblValue Format="@NumberFormat" Step=@NumberStep Min="0.0" Max="100.0"></SfNumericTextBox>
                        }-->
                        <Number NumberModel=@numberviewmodel></Number>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

@code {
    //[Parameter] // Number format n#- number d#decimals, c# currency, p# percent
    //public String NumberFormat { get; set; } = "n0";

    //[Parameter] // Number Box 
    //public Double NumberStep { get; set; } = 1;

    //[Parameter]
    //public Int32 Value { get; set; } = 0;

    //[Parameter]
    //public double Min { get; set; } = 0;

    //[Parameter]
    //public double Max { get; set; } = 0;

    //[Parameter]
    //public string Label { get; set; }

    //[Parameter] // Numeric Data Type
    //public NumericDataTypes DataType { get; set; }
    [Parameter]
    public Teacher data { get; set; }

    public NumberViewModel numberviewmodel { get; set; }


    protected override async Task OnInitializedAsync()
    {
        GetQuestionText();
        //numberviewmodel = new NumberViewModel();
        //numberviewmodel.Id = Config.Id;
        //numberviewmodel.Name = Config.EntityField;
        //numberviewmodel.Max = Config.Max;
        //numberviewmodel.Min = Config.Min;
        //numberviewmodel.NumberFormat = Config.NumberFormat;
        //numberviewmodel.NumberStep = Config.NumberStep;        
        //numberviewmodel.Placeholder = Config.Label;

        //numberviewmodel.Value = data....
    }

    public async void ChangeNumberModel(Microsoft.AspNetCore.Components.ChangeEventArgs e)
    {
        switch (Config.EntityName)
        {
            case "Questionnaires.Data.Demographics":
                data.GetType().GetProperty((Config.EntityField).Replace(" ", "")).SetValue(data.Children.First().QuestionnairesDataDemographics, e.Value.ToString());
                break;
            case "Questionnaires.Data.SectionB":
                data.GetType().GetProperty((Config.EntityField).Replace(" ", "")).SetValue(data.Children.First().QuestionnairesDataSectionBs, e.Value.ToString());
                break;
        }

    }
}