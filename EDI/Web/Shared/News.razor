@using Microsoft.AspNetCore.Html
@using EDI.Web.Shared.Modals;
@inject NavigationManager NavigationManager;
@inject UserSettings UserSettings;

<!--<div class="card">
    <div class="card-body">-->
<h3 class="card-title"><a href="" class="card-news" title="@newsobj.Title" @onclick="OnClick" @onclick:preventDefault>@newsobj.Title</a></h3>
<div class="card-text">@((MarkupString)newsobj.Summary)</div>
<br />
@if (ShowActions)
{
    <AuthorizeView Roles="Administrator">
        <Authorized>
            <button class="btn btn-info" data-toggle="tooltip" data-placement="bottom" title="Edit" @onclick="OnEditClick"><i class="fa fa-pencil-alt fa-1x whiteiconcolor"></i> Edit</button>
            <button class="btn btn-danger" data-toggle="tooltip" data-placement="bottom" title="Delete" @onclick="OnDeleteClick"><i class="fa fa-trash-alt fa-1x whiteiconcolor"></i> Delete</button>
        </Authorized>
    </AuthorizeView>
}

<!-- </div>
</div>-->

@code {
    [CascadingParameter] public IModalService ModalService { get; set; }
    [Parameter]
    public NewsFeedItemViewModel newsobj { get; set; }
    [Parameter]
    public EventCallback OnDeleteClick { get; set; }
    [Parameter]
    public EventCallback OnEditClick { get; set; }
    [Parameter]
    public bool ShowActions { get; set; } = true;

    private string url1 { get; set; }

    protected override async Task OnInitializedAsync()
    {
        url1 = NavigationManager.BaseUri + "NewsFeeds/View/" + newsobj.Id;
    }

    private void OnClick()
    {
        //var parameters = new ModalParameters();
        //parameters.Add("NewsFeedModel", newsobj);

        //var modal = ModalService.Show<NewsModal>("News", parameters);

        UserSettings.CurrentURL = NavigationManager.Uri;

        NavigationManager.NavigateTo(url1);
    }
}
