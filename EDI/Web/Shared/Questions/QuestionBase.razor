<!-- https://chrissainty.com/building-custom-input-components-for-blazor-using-inputbase/
    https://blazor-university.com/templating-components-with-renderfragements/
    -->
@inject ServiceContext dbContext;
@inject UserSettings UserSettings;

@using System.Linq.Dynamic.Core;



@code {
    [Parameter]
    public string QuestionText { get; set; } = "";

    [Parameter] // column to store responses
    public string DataColumn { get; set; } = "";

    [Parameter] // string value
    public string StringValue { get; set; } = "";

    [Parameter] // integer value
    public Int32 IntValue { get; set; } = 0;

    [Parameter] // double value
    public double DblValue { get; set; } = 0.00;

    [Parameter] // Data Type String
    public String DataTypeString { get; set; } = "Int32";    

    //[Parameter] // Data Type
    //public System.Type DataType { get; set; } = typeof(String);

    public List<LookupSetOption> GetLookupSetOptions(int LookupSetId)
    {
        return dbContext.LookupSetOptions.Where(o => o.LookupSetId == LookupSetId).OrderBy(o => o.Sequence).ToList();
    }


}
