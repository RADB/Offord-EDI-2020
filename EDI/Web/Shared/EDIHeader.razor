@using Microsoft.AspNetCore.Components.Authorization
@using Syncfusion.Blazor.Buttons;
@inject AuthenticationStateProvider AuthenticationStateProvider
@inject NavigationManager NavigationManager
@inject UserSettings UserSettings;
@inject ISharedService sharedService;
@inject ServiceContext dbContext;
@inject IToastService toastService;
@inject StateContainer StateContainer;
@inject IAccountService accountService;
@implements IDisposable;


<div class="container-fluid p-1 border border-secondary EDIHeader">
    <div class="row">
        <div class="col">
            <div class="media">
                <img src="images/edi-logo.png" height="99" />
                <div class="media-body align-self-center d-none d-lg-block text-nowrap">
                    <h2 style="font-family: Arial;font-weight: bold;color: #294980;font-size: 25px;">@Translate("Early Development Instrument")</h2>
                    <h4 style="font-family: Arial;font-weight: bold;color: #294980;font-size: 15px;">@Translate("A Population-Based Measure for Communities")</h4>
                </div>
            </div>
        </div>
        <div class="col-4 text-right align-self-center  text-nowrap">
@*            <SfSwitch CssClass="handle-text" OnLabel="French" OffLabel="English" @bind-Checked="@isFrench" ValueChange="@((Syncfusion.Blazor.Buttons.ChangeEventArgs<bool> e) =>OnEnglishChange(e))"></SfSwitch>*@
            <AuthorizeView Roles="Teacher">
                <Authorized>
                    <button class="btn btn-success" @onclick="Save"><i class="fa fa-save bg whiteiconcolor"></i> Save</button>
                </Authorized>
            </AuthorizeView>
            <button class="btn btn-danger" @onclick="Exit"><i class="fas fa-sign-out-alt"></i> Exit</button>
        </div>
    </div>
</div>



@*if (NavigationManager.Uri.Contains("TeacherProfile"))*@


@code {

    private Boolean isFrench { get; set; }

    protected override async Task OnInitializedAsync()
    {
        if (!UserSettings.IsAuthenticated)
        {
            NavigationManager.NavigateTo("./login");
        }
        if (UserSettings.Language == "English")
            isFrench = false;
        else
            isFrench = true;
        StateContainer.OnChange += StateHasChanged;
    }

    private string Translate(string word)
    {
        return sharedService.GetTranslate(word);
    }

    private void Exit()
    {
        NavigationManager.NavigateTo("./children/index");
    }

    private async void Save()
    {
        // update the dbcontext with the teacherdata
        dbContext.Update(StateContainer.TeacherData);
        await dbContext.SaveChangesAsync();

        toastService.ShowSuccess("Data Saved Successfully!");

        StateHasChanged();
    }

    public void Dispose()
    {
        StateContainer.OnChange -= StateHasChanged;
    }

    private async void OnEnglishChange(Syncfusion.Blazor.Buttons.ChangeEventArgs<bool> e)
    {
        if (e.Checked)
        {
            UserSettings.Language = "French";
        }
        else
            UserSettings.Language = "English";

        await accountService.UpdateUserLanguageAsync(UserSettings);

        var url = NavigationManager.Uri;
        NavigationManager.NavigateTo(url, true);

        StateHasChanged();
    }
}
