@using Syncfusion.Blazor.Navigations
@inject NavigationManager NavigationManager
@inject UserSettings UserSettings;
@inject ISharedService sharedService;


<SfSidebar HtmlAttributes="@HtmlAttribute" Width="290px" Target=".main-content" @ref="Sidebar" MediaQuery="(min-width:600px)">
    <ChildContent>
        <div class="main-menu">
            <div>                
                <SfTreeView CssClass="main-teachertreeview" @ref="TreeView" ExpandOn="@Expand" TValue="TreeData">
                    <TreeViewFieldsSettings Id="nodeId" Text="nodeText" DataSource="treedata"></TreeViewFieldsSettings>
                    <TreeViewEvents TValue="TreeData" NodeSelected="onSelect" NodeClicked="onClick"></TreeViewEvents>
                    <TreeViewTemplates TValue="TreeData">
                        <NodeTemplate>
                            @{
                                var item = (context as TreeData);
                                if (item.icon.ToString() == "question_answer teachericon")
                                // use material icon for FAQ
                                { <i class="material-icons-outlined teachericon">question_answer</i>}

                                else
                                // use base icons for other
                                {<i class="@item.icon"></i>}

                                <span class="nodeText">@item.nodeText</span>
                            }
                        </NodeTemplate>
                    </TreeViewTemplates>
                </SfTreeView>
            </div>
        </div>
    </ChildContent>
</SfSidebar>

@code {
    SfTreeView<TreeData> TreeView;
    public SfSidebar Sidebar;
    public ExpandAction Expand = ExpandAction.Click;
    Dictionary<string, object> HtmlAttribute = new Dictionary<string, object>()
{
        {"class", "sidebar-treeview" }
    };

    public class TreeData
    {
        public string nodeId { get; set; }
        public string nodeText { get; set; }
        public string icon { get; set; }
        public bool hasChild { get; set; }
        public string pid { get; set; }
    }
    private List<TreeData> treedata = new List<TreeData>();
    protected override void OnInitialized()
    {
        base.OnInitialized();
        // default uses simple-line-icons, can use material or fontawesome or fabric
        treedata.Add(new TreeData { nodeId = "01", nodeText = sharedService.GetTranslate("Dashboard"), icon = "icon-graph teachericon" });
        treedata.Add(new TreeData { nodeId = "02", nodeText = sharedService.GetTranslate("Class List"), icon = "icon-people teachericon" });
        treedata.Add(new TreeData { nodeId = "03", nodeText = sharedService.GetTranslate("Resources"), icon = "icon-folder-alt teachericon" });
        treedata.Add(new TreeData { nodeId = "04", nodeText = sharedService.GetTranslate("Links"), icon = "icon-link teachericon" });
        treedata.Add(new TreeData { nodeId = "05", nodeText = sharedService.GetTranslate("FAQ"), icon = "question_answer teachericon" });
        treedata.Add(new TreeData { nodeId = "06", nodeText = sharedService.GetTranslate("Questions"), icon = "icon-list teachericon" });
        treedata.Add(new TreeData { nodeId = "07", nodeText = sharedService.GetTranslate("News"), icon = "icon-list teachericon" });
    }

    private void onSelect(NodeSelectEventArgs args)
    {
        if (args.NodeData.Id == "01")
        {
            NavigationManager.NavigateTo("./Dashboard/index");
        }
        else if (args.NodeData.Id == "02")
        {
            NavigationManager.NavigateTo("./children/index");
        }
        else if (args.NodeData.Id == "03")
        {
            NavigationManager.NavigateTo("./documents/index/teacher");
        }
        else if (args.NodeData.Id == "04")
        {
            NavigationManager.NavigateTo("./links/index");
        }
        else if (args.NodeData.Id == "05")
        {
            NavigationManager.NavigateTo("./faq/index");
        }
        else if (args.NodeData.Id == "06")
        {
            NavigationManager.NavigateTo("./SampleQuestions/index");
        }
        else if (args.NodeData.Id == "07")
        {
            NavigationManager.NavigateTo("./newsfeeds/admin");
        }
    }

    private async void onClick(NodeClickEventArgs args)
    {
        //List<TreeData> NodeDetails = await this.treeView.GetTreeData(args.Node);
        //var Element = new[] { args.Node };
    }
}