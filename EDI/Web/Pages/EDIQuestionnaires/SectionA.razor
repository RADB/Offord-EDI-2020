@page "/EDIQuestionnaires/SectionA/{ChildId:int}"
@page "/EDIQuestionnaires/SectionA/"
@inherits SectionBase;
@using Microsoft.AspNetCore.Components.Authorization
@using EDI.Web.Shared.Questionnaires
@using static EDI.Web.Data.Enumerations
@using System.Linq.Dynamic.Core
@using Blazored.Modal
@using Blazored.Modal.Services
@using Syncfusion.Blazor.Navigations

@inject AuthenticationStateProvider AuthenticationStateProvider;
@inject NavigationManager NavigationManager;
@inject UserSettings UserSettings;
@inject ServiceContext dbContext;
@inject ISharedService sharedService;
@inject IMathService mathService;
@*<QuestionnaireNavigation QuestionnaireId=@QuestionnaireId ChildId=@ChildId IsReadOnly=@IsReadOnly></QuestionnaireNavigation>*@

<QuestionnaireHeader teacherData=@teacherData IsReadOnly=@IsReadOnly ProvinceName=@province QuestionnaireId=@QuestionnaireId marginTop="15px"></QuestionnaireHeader>

@code {
    protected override Task OnParametersSetAsync()
    {
        initializeCounts();
        return base.OnParametersSetAsync();
    }
    protected override async Task OnInitializedAsync()
    {
        if (!UserSettings.IsAuthenticated)
        {
            NavigationManager.NavigateTo("./login");
        }
        else
        {
            try
            {
                checkChildId();
                getData("SectionA");

                //getData();

                if (UserSettings.IsTeacher)
                {
                    //check if child is not it teachers class
                    predicate = "Id = " + ChildId + " AND TeacherId = " + UserSettings.TeacherId;
                    if (!dbContext.Children.Where(predicate).Any())
                        NavigationManager.NavigateTo("./children/index");
                }

                predicate = "p => p." + province + ".Value && p.YearId == " + UserSettings.YearId + " && p.QuestionnaireName == \"Section A\"";
                QuestionnaireId = dbContext.Questionnaires.Where(predicate).Select(q => q.Id).Single();
            }
            catch (Exception ex)
            {
                NavigationManager.NavigateTo("./children/index");
            }
        }
    }



}