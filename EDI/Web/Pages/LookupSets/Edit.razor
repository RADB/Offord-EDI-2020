@page "/lookupSets/edit/{Id:int}"
@using Microsoft.AspNetCore.Http;
@using Microsoft.AspNetCore.Components.Authorization
@using Syncfusion.Blazor.Navigations;
@inject AuthenticationStateProvider AuthenticationStateProvider
@inject IToastService toastService;
@inject ILookupSetService lookupSetService
@inject NavigationManager NavigationManager
@inject IJSRuntime JsRuntime;
@inject IModalService Modal;
@inject ServiceContext dbContext;
@inject UserSettings UserSettings;

@if (!string.IsNullOrEmpty(@Message))
{
    <div class="alert alert-info alert-dismissible" role="alert">
        <button type="button" class="close" data-dismiss="alert" aria-label="Close"><span aria-hidden="true">&times;</span></button>
        @Message
    </div>
}

@if (!string.IsNullOrEmpty(@ErrorMessage))
{
    <div class="alert alert-danger alert-dismissible" role="alert">
        <button type="button" class="close" data-dismiss="alert" aria-label="Close"><span aria-hidden="true">&times;</span></button>
        @ErrorMessage
    </div>
}
<br />

<div class="row">
    <div class="col-md-10">
        <div class="card" style="box-shadow: 0 8px 32px rgba(77,101,117,0.35);border-radius: 12px;border-color: transparent;margin-top: 95px;margin-left:50px;">
            <div class="card-header">
                <strong>Edit LookupSet</strong>
                <div class="pull-right">
                    <button class="resetbutton" data-toggle="tooltip" data-placement="bottom" title="Reset" @onclick="Reset"><i class="fa fa-undo fa-1x whiteiconcolor"></i></button>
                    <button class="addnewbutton" data-toggle="tooltip" data-placement="bottom" title="Add" @onclick="Add"><i class="fa fa-plus fa-1x whiteiconcolor"></i></button>
                    <button class="editbutton" data-toggle="tooltip" data-placement="bottom" title="Back" @onclick="Exit"><i class="fa fa-sign-out-alt fa-1x whiteiconcolor"></i></button>
                </div>
            </div>
            <br />
            <div class="col-md-7" style="margin-left: 24px;">
                <SfAccordion>
                    <AccordionItems>
                        <AccordionItem Header="Details" Expanded="true">
                            <ContentTemplate>
                                <LookupSetForm @ref="lookupSetform1" LookupSetModel="@LookupSetModel" HandleValidSubmit="HandleValidSubmit" />
                            </ContentTemplate>
                        </AccordionItem>
                    </AccordionItems>
                </SfAccordion>
            </div>
            <div class="col-md-12">
                <EDI.Web.Pages.LookupSets.OptionIndex LookupSetId=@Id Header="LookupSet Options" AllowDelete=true AllowEdit=true></EDI.Web.Pages.LookupSets.OptionIndex>
            </div>
            <br />
        </div>
    </div>
</div>

@code {
    [Parameter]
    public int Id { get; set; }
    private string Message { get; set; }
    private string ErrorMessage { get; set; }

    private LookupSetItemViewModel LookupSetModel { get; set; } = new LookupSetItemViewModel();

    LookupSetForm lookupSetform1 = new LookupSetForm();

    SfGrid<LookupSetOptionItemViewModel> Grid;

    protected override async Task OnInitializedAsync()
    {
        if (!UserSettings.IsAuthenticated)
        {
            NavigationManager.NavigateTo("./login");
        }
        else if (!UserSettings.IsAdmin)
        {
            NavigationManager.NavigateTo("./dashboard/index");
        }
        else
        {
            LookupSetModel = await lookupSetService.GetLookupSetItem(Id);
        }
    }

    private async void HandleValidSubmit()
    {
        await lookupSetService.UpdateLookupSetAsync(lookupSetform1.LookupSetModel);

        Message = "LookupSet updated successfully.";

        toastService.ShowSuccess(Message);

        StateHasChanged();
    }

    private void Exit()
    {
        NavigationManager.NavigateTo("./lookupSets/index");
    }

    private async void Reset()
    {
        LookupSetModel = await lookupSetService.GetLookupSetItem(Id);
    }

    private void Add()
    {
        NavigationManager.NavigateTo("./lookupSets/new");
    }
}