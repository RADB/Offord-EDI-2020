@page "/Dashboard/index"
@using Microsoft.AspNetCore.Components.Authorization
@using EDI.Web.Data
@using EDI.Web.Shared.BusinessIntelligence
@using EDI.Web.Shared.Verification
@using EDI.Web.Shared.Questionnaires
@using EDI.Web.Pages.NewsFeeds
@using System.Linq.Dynamic.Core
@using Serilog;
@using Syncfusion.Blazor.Buttons
@inject AuthenticationStateProvider AuthenticationStateProvider
@inject NavigationManager NavigationManager;
@inject ServiceContext dbContext;
@inject AppIdentityDbContext identityContext;
@inject IMathService MathService;
@inject UserSettings UserSettings;
@inject ISharedService sharedService;
@inject IToastService toastService;

<div class="row">
    <div class="col-md-12">
        <div class="card" style="box-shadow: 0 8px 32px rgba(77,101,117,0.35);border-radius: 12px;border-color: transparent;margin-top: 95px;margin-left:30px;">
            @if (UserSettings.IsAdmin)
            {
                <div class="card-header">
                    <div class="row cardHeader">
                        <strong>@Translate("Administrator Dashboard"):</strong> @UserSettings.FirstName  @UserSettings.LastName
                    </div>
                    <div class="pull-right">
                        @if (UserSettings.IsAdmin)
                        {
                            <div class="float-right">
                                <!--Check English or French -->
                                <SfSwitch CssClass="handle-text" OnLabel="Test Data" OffLabel="No Test Data" @bind-Checked="@hasTestData" ValueChange="@((Syncfusion.Blazor.Buttons.ChangeEventArgs<bool> e) =>OnTestChange(e))"></SfSwitch>
                            </div>
                        }
                    </div>
                </div>
                <div class="card-body">
                    <div class="container-fluid">
                        <div class="row">
                            <div class="col-xl-3 col-md-6 mb-4">
                                <div class="card border-left-primary shadow h-100 py-2">
                                    <div class="card-body">
                                        <div class="row no-gutters align-items-center">
                                            <div class="col mr-2">
                                                <div class="text-xs font-weight-bold text-primary text-uppercase mb-1">Sites</div>
                                                <div class="h3 mb-0 font-weight-bold text-gray-800">@siteCount</div>
                                            </div>
                                            <div class="col-auto">
                                                <i class="fa fa-sitemap fa-3x text-primary"></i>
                                                <!--style="font-size:120px;color:blue">-->
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            </div>

                            <div class="col-xl-3 col-md-6 mb-4">
                                <div class="card border-left-primary shadow h-100 py-2">
                                    <div class="card-body">
                                        <div class="row no-gutters align-items-center">
                                            <div class="col mr-2">
                                                <div class="text-xs font-weight-bold text-primary text-uppercase mb-1">Schools</div>
                                                <div class="h3 mb-0 font-weight-bold text-gray-800">@schoolCount</div>
                                            </div>
                                            <div class="col-auto">
                                                <i class="fa fa-school fa-3x text-secondary"></i>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            </div>

                            <div class="col-xl-3 col-md-6 mb-4">
                                <div class="card border-left-primary shadow h-100 py-2">
                                    <div class="card-body">
                                        <div class="row no-gutters align-items-center">
                                            <div class="col mr-2">
                                                <div class="text-xs font-weight-bold text-primary text-uppercase mb-1">Teachers</div>
                                                <div class="h3 mb-0 font-weight-bold text-gray-800">@teacherCount</div>
                                            </div>
                                            <div class="col-auto">
                                                <i class="fa fa-chalkboard-teacher fa-3x  text-success"></i>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            </div>

                            <div class="col-xl-3 col-md-6 mb-4">
                                <div class="card border-left-primary shadow h-100 py-2">
                                    <div class="card-body">
                                        <div class="row no-gutters align-items-center">
                                            <div class="col mr-2">
                                                <div class="text-xs font-weight-bold text-primary text-uppercase mb-1">Children</div>
                                                <div class="h3 mb-0 font-weight-bold text-gray-800">@childCount</div>
                                            </div>
                                            <div class="col-auto">
                                                <i class="fa fa-child fa-3x  text-warning"></i>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                        <div class="row">
                            <div class="col-lg-8 mb-4">
                                <!-- EDI Questionnaires Status -->
                                <QuestionnaireStatusBar Header="EDI Questionnaires" Total="@childCount" New="@ChildrenNew" Inprogress="@ChildrenInprogress" Complete="@ChildrenCompleted" />

                                <!-- Profile Questionnaires Status -->
                                <QuestionnaireStatusBar Header="Teacher Profiles" Total="@teacherCount" New="@TeacherNew" Inprogress="@TeacherInprogress" Complete="@TeacherCompleted" />
                            </div>
                            <div class="col-lg-4 mb-4">
                                <!--<div class="card shadow mb-4">
                                    <div class="card-header py-3">
                                        <h4 class="text-dark" >This is a test header</h4>
                                    </div>
                                    <div class="card-body">
                                        <div class="small font-weight-normal">This is my message.</div>
                                    </div>
                                </div>-->
                                <EDI.Web.Pages.NewsFeeds.Newslist />
                            </div>
                        </div>
                    </div>
                </div>
            }
            else if (UserSettings.IsTeacher)
            {
                <div class="card-header">
                    <div class="row cardHeader">
                        <strong>@Translate("Teacher Dashboard"): &nbsp;</strong> @UserSettings.FirstName  @UserSettings.LastName

                    </div>
                </div>
                <div class="card-body">
                    <div class="container-fluid">
                        <div class="row">
                            <div class="col-xl-3 col-md-6 mb-4">
                                <div class="card border-left-primary shadow h-100 py-2">
                                    <div class="card-body">
                                        <div class="row no-gutters align-items-center">
                                            <div class="col mr-2">
                                                <div class="text-xs font-weight-bold text-primary text-uppercase mb-1">@Translate("Children")</div>
                                                <div class="h3 mb-0 font-weight-bold text-gray-800">@childCount</div>
                                            </div>
                                            <div class="col-auto">
                                                <i class="fa fa-child fa-3x  text-warning"></i>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>

                        <div class="row">
                            <div class="col-lg-8 mb-4">
                                <!-- EDI Questionnaires Status -->
                                <QuestionnaireStatusBar Header=@Translate("EDI Questionnaires") Total="@childCount" New="@ChildrenNew" Inprogress="@ChildrenInprogress" Complete="@ChildrenCompleted" />

                                @*<QuestionnaireChecklist IsComplete=false QuestionnaireName=@Translate("Teacher Profile") URL="@url" />*@
                                <QuestionnaireChecklist IsComplete=@ProfileComplete QuestionnaireName=@Translate("Teacher Profile") Header="Teacher Profile Status" URL="@url" />
                            </div>
                            <div class="col-lg-4 mb-4">
                                <EDI.Web.Pages.NewsFeeds.Newslist />
                            </div>
                        </div>
                    </div>
                </div>
            }
            else
            {
                <div class="card-header">
                    <strong>@Translate("Coordinator Dashboard")</strong> - @UserSettings.FirstName  @UserSettings.LastName
                </div>
                <div class="card-body">
                </div>
            }
        </div>
    </div>
</div>

@code {
    private int siteCount { get; set; }
    private int schoolCount { get; set; }
    private int teacherCount { get; set; }
    private int childCount { get; set; }
    private int sites { get; set; }
    private int schools { get; set; }
    private int teachers { get; set; }
    private int children { get; set; }
    private string url { get; set; }

    private int ChildrenNew { get; set; } = 0;
    private int ChildrenInprogress { get; set; } = 0;
    private int ChildrenCompleted { get; set; } = 0;

    private int TeacherNew { get; set; } = 0;
    private int TeacherInprogress { get; set; } = 0;
    private int TeacherCompleted { get; set; } = 0;
    private bool ProfileComplete { get; set; }

    private Boolean hasTestData { get; set; }

    protected override async Task OnInitializedAsync()
    {
        if (!UserSettings.IsAuthenticated)
        {
            NavigationManager.NavigateTo("./login");
        }
        else
        {
            @if (UserSettings.IsAdmin)
            {
                var predicate = "yearid ==" + UserSettings.YearId;
                var sites = dbContext.Sites.Where(predicate).ToList();

                if (!UserSettings.HasTestData)
                {
                    var predicate2 = predicate + " && IsTestSite != true";
                    sites = dbContext.Sites.Where(predicate2).ToList();
                }
                var schools = (from t in dbContext.Schools
                               where t.YearId == UserSettings.YearId &&
                               (from s in sites select s.Id).Contains(t.SiteId)
                               select t).ToList();

                var teachers = (from t in dbContext.Teachers
                                where t.YearId == UserSettings.YearId &&
                                (from s in schools select s.Id).Contains(t.SchoolId)
                                select t).Include(ts => ts.TeacherStatus).ToList();

                var children = (from t in dbContext.Children
                                where t.YearId == UserSettings.YearId &&
                                (from s in teachers select s.Id).Contains(t.TeacherId)
                                select t).Include(ts => ts.ChildStatus).ToList();

                siteCount = sites.Count();
                schoolCount = schools.Count();
                teacherCount = teachers.Count();
                childCount = children.Count();

                // count of the children
                ChildrenNew = children.Count(c => (Enumerations.ChildStatus)c.ChildStatusId == Enumerations.ChildStatus.New);
                ChildrenInprogress = children.Count(c => (Enumerations.ChildStatus)c.ChildStatusId == Enumerations.ChildStatus.InProgress);
                ChildrenCompleted = children.Count(c => (Enumerations.ChildStatus)c.ChildStatusId == Enumerations.ChildStatus.Locked || (Enumerations.ChildStatus)c.ChildStatusId == Enumerations.ChildStatus.Complete);

                // count of the teachaers
                TeacherNew = teachers.Count(c => (Enumerations.TeacherStatus)c.TeacherStatusId == Enumerations.TeacherStatus.New);
                TeacherInprogress = teachers.Count(c => (Enumerations.TeacherStatus)c.TeacherStatusId == Enumerations.TeacherStatus.InProgress);
                TeacherCompleted = teachers.Count(c => (Enumerations.TeacherStatus)c.TeacherStatusId == Enumerations.TeacherStatus.Locked || (Enumerations.TeacherStatus)c.TeacherStatusId == Enumerations.TeacherStatus.Complete);

                //var statusnew = dbContext.ChildStatuses.Where(p => p.English == "New").FirstOrDefault();
                //var statusinprogress = dbContext.ChildStatuses.Where(p => p.English == "In Progress").FirstOrDefault();
                //var statuscompleted = dbContext.ChildStatuses.Where(p => p.English == "Complete").FirstOrDefault();

                //var predicatenew = predicate + "&& ChildStatusId == " + statusnew.Id;
                //ChildrenNew = dbContext.Children.Where(predicatenew).Count();

                //var predicateinprogess = predicate + "&& ChildStatusId == " + statusinprogress.Id;
                //ChildrenInprogress = dbContext.Children.Where(predicateinprogess).Count();

                //var predicatecomplete = predicate + "&& ChildStatusId == " + statuscompleted.Id;
                //ChildrenCompleted = dbContext.Children.Where(predicatecomplete).Count();

                //var statusnew1 = dbContext.TeacherStatuses.Where(p => p.English == "New").FirstOrDefault();
                //var statusinprogress1 = dbContext.TeacherStatuses.Where(p => p.English == "In Progress").FirstOrDefault();
                //var statuscompleted1 = dbContext.TeacherStatuses.Where(p => p.English == "Complete").FirstOrDefault();

                //var predicatenew1 = predicate + "&& TeacherStatusId == " + statusnew1.Id;
                //TeacherNew = dbContext.Teachers.Where(predicatenew1).Count();

                //var predicateinprogess1 = predicate + "&& TeacherStatusId == " + statusinprogress1.Id;
                //TeacherInprogress = dbContext.Teachers.Where(predicateinprogess1).Count();

                //var predicatecomplete1 = predicate + "&& TeacherStatusId == " + statuscompleted1.Id;
                //TeacherCompleted = dbContext.Teachers.Where(predicatecomplete1).Count();

                hasTestData = UserSettings.HasTestData;

            }
            else if (UserSettings.IsTeacher)
            {
                try
                {
                    var teacher = dbContext.Teachers.Where(t => t.UserId == UserSettings.UserID && t.YearId == UserSettings.YearId)
                    .Include(c => c.Children)
                    .ThenInclude(cs => cs.ChildStatus)
                    .Include(p => p.QuestionnairesDataTeacherProfiles)
                    .Single();

                    // count of the children
                    childCount = teacher.Children.Count();
                    ChildrenNew = teacher.Children.Count(c => (Enumerations.ChildStatus)c.ChildStatusId == Enumerations.ChildStatus.New);
                    ChildrenInprogress = teacher.Children.Count(c => (Enumerations.ChildStatus)c.ChildStatusId == Enumerations.ChildStatus.InProgress);

                    // completed or locked
                    ChildrenCompleted = teacher.Children.Count(c => (Enumerations.ChildStatus)c.ChildStatusId == Enumerations.ChildStatus.Locked || (Enumerations.ChildStatus)c.ChildStatusId == Enumerations.ChildStatus.Complete);

                    ProfileComplete = teacher.QuestionnairesDataTeacherProfiles.Single().IsComplete;

                    //var predicate = "TeacherId == " + teacher.Id + "&& yearid ==" + UserSettings.YearId;

                    //var statusnew = dbContext.ChildStatuses.Where(p => p.English == "New").FirstOrDefault();
                    //var statusinprogress = dbContext.ChildStatuses.Where(p => p.English == "In Progress").FirstOrDefault();
                    //var statuscompleted = dbContext.ChildStatuses.Where(p => p.English == "Complete").FirstOrDefault();

                    //var predicatenew = predicate2 + "&& ChildStatusId == " + statusnew.Id;
                    //ChildrenNew = dbContext.Children.Where(predicatenew).Count();

                    //var predicateinprogess = predicate2 + "&& ChildStatusId == " + statusinprogress.Id;
                    //ChildrenInprogress = dbContext.Children.Where(predicateinprogess).Count();

                    //var predicatecomplete = predicate2 + "&& ChildStatusId == " + statuscompleted.Id;
                    //ChildrenCompleted = dbContext.Children.Where(predicateinprogess).Count();

                    // return whether or not they have completed the profile
                    //ProfileComplete = dbContext.QuestionnairesDataTeacherProfiles.Where(predicate).Select(t => t.IsComplete).Single();                }
                }
                catch (Exception ex)
                {
                    //toastService.ShowError(string.Format("{0}", ex.Message), "No Teacher Data");

                    sharedService.WriteLogs(string.Format("{0}", ex.Message), false);
                    children = 0;
                }

                url = "/TeacherProfile/Index/" + UserSettings.TeacherId;
            }
            else
            {
                // coordinator
            }
        }
    }

    private string Translate(string word)
    {
        return sharedService.GetTranslate(word);
    }

    private async void OnTestChange(Syncfusion.Blazor.Buttons.ChangeEventArgs<bool> e)
    {
        if (e.Checked)
        {
            UserSettings.HasTestData = true;
        }
        else
            UserSettings.HasTestData = false;

        await sharedService.SaveUserSessions("HasTestData", UserSettings.HasTestData.ToString(), UserSettings.UserID);

        var url = NavigationManager.Uri;
        NavigationManager.NavigateTo(url, true);
    }

}